{"ast":null,"code":"var _jsxFileName = \"/Users/shinoharatsubasa/Documents/RocketSim_New_2d_integ/src/components/rocket/AttitudeDisplayRenderer.jsx\";\n// AttitudeDisplayRenderer.jsx\n// ロケット姿勢表示のための専用レンダリングコンポーネント\nimport React from 'react';\nimport { getSafeValue } from './RocketRendering';\n\n/**\n * 安全に数値を取得するユーティリティ関数\n * @param {*} value - 検証する値\n * @param {number} defaultValue - デフォルト値\n * @returns {number} 検証済みの数値\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getSafeNumber = (value, defaultValue = 0) => {\n  // 値がnull、undefined、NaN、無限大の場合はデフォルト値を返す\n  if (value === null || value === undefined || isNaN(value) || !isFinite(value)) {\n    return defaultValue;\n  }\n  // 数値型でない場合、変換を試みる\n  if (typeof value !== 'number') {\n    const parsed = parseFloat(value);\n    // 変換できなければデフォルト値を返す\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n  return value;\n};\n\n/**\n * 姿勢表示用のロケットスケール計算の改良版\n * @param {Object} rocketParams - ロケットパラメータ\n * @param {number} circleRadius - 表示円の半径\n * @returns {number} 適切なスケール係数\n */\nexport const calculateAttitudeDisplayScale = (rocketParams, circleRadius = 90) => {\n  try {\n    // 必要なパラメータを安全に取得\n    const noseHeight = getSafeNumber(rocketParams.noseHeight, 50);\n    const bodyHeight = getSafeNumber(rocketParams.bodyHeight, 200);\n    const bodyWidth = getSafeNumber(rocketParams.bodyWidth, 30);\n    const finHeight = getSafeNumber(rocketParams.finHeight, 40);\n    const finSweepLength = getSafeNumber(rocketParams.finSweepLength, 0);\n    const finTipWidth = getSafeNumber(rocketParams.finTipWidth, 20);\n    const finBaseWidth = getSafeNumber(rocketParams.finBaseWidth, 30);\n\n    // ロケットの寸法を計算\n    const actualRocketHeight = noseHeight + bodyHeight;\n\n    // フィンの後端部分を計算 (前進翼にも対応)\n    const finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n\n    // 横方向の最大幅を計算（フィン含む）\n    const widthWithFins = bodyWidth + finHeight * 2;\n\n    // 全長は機体長 + フィン後端部分\n    const totalHeight = actualRocketHeight + finExtension;\n    const totalWidth = widthWithFins;\n\n    // アスペクト比を考慮したスケール計算\n    const heightScale = circleRadius * 1.6 / Math.max(totalHeight, 50);\n    const widthScale = circleRadius * 1.6 / Math.max(totalWidth, 30);\n\n    // 小さい方のスケールを採用（全体が表示エリアに収まるように）\n    const scale = Math.min(heightScale, widthScale);\n\n    // スケールに上限・下限を設定\n    return Math.max(0.1, Math.min(0.5, scale));\n  } catch (error) {\n    console.error('姿勢表示スケール計算エラー:', error);\n    return 0.3; // エラー時のデフォルト値\n  }\n};\n\n/**\n * ロケット本体パスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - 底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @returns {string} SVGパス文字列\n */\nexport const getBodyPathForAttitude = (x, y, params) => {\n  // NaNチェック\n  const safeX = isNaN(x) ? 0 : x;\n  const safeY = isNaN(y) ? 0 : y;\n\n  // params値のチェック\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const bodyHeight = getSafeNumber(params.bodyHeight, 200);\n  const startX = safeX - bodyWidth / 2;\n  const endX = safeX + bodyWidth / 2;\n  return `M ${startX} ${safeY} \n          L ${startX} ${safeY - bodyHeight} \n          L ${endX} ${safeY - bodyHeight} \n          L ${endX} ${safeY} Z`;\n};\n\n/**\n * ノーズ形状パスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - ボディ底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @returns {string} SVGパス文字列\n */\nexport const getNosePathForAttitude = (x, y, params) => {\n  // パラメータの安全な取得\n  const noseShape = params.noseShape || 'ogive';\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const noseHeight = getSafeNumber(params.noseHeight, 50);\n  const bodyHeight = getSafeNumber(params.bodyHeight, 200);\n  const startX = x - bodyWidth / 2;\n  const endX = x + bodyWidth / 2;\n  const baseY = y - bodyHeight;\n  const topY = baseY - noseHeight;\n  if (noseShape === \"cone\") {\n    // 円錐ノーズ\n    return `M ${startX} ${baseY} L ${x} ${topY} L ${endX} ${baseY} Z`;\n  } else if (noseShape === \"parabola\") {\n    // 放物線ノーズ - 精度向上\n    const controlY = topY + noseHeight * 0.15;\n    return `M ${startX} ${baseY} \n            C ${startX} ${controlY}, ${x} ${topY}, ${x} ${topY}\n            C ${x} ${topY}, ${endX} ${controlY}, ${endX} ${baseY} Z`;\n  } else {\n    // オジブノーズ - 形状の精度向上\n    const halfWidth = bodyWidth / 2;\n    return `M ${startX} ${baseY}\n            Q ${startX + halfWidth * 0.1} ${topY + noseHeight * 0.4}, ${x} ${topY}\n            Q ${endX - halfWidth * 0.1} ${topY + noseHeight * 0.4}, ${endX} ${baseY} Z`;\n  }\n};\n\n/**\n * フィン形状のパスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - ボディ底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @param {number} deflection - たわみ角度（度）\n * @returns {Object} 各フィンのSVGパス文字列\n */\nexport const getFinPathsForAttitude = (x, y, params, deflection = 0) => {\n  // 安全にパラメータを取得\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const finHeight = getSafeNumber(params.finHeight, 40);\n  const finBaseWidth = getSafeNumber(params.finBaseWidth, 30);\n  const finSweepLength = getSafeNumber(params.finSweepLength, 0);\n  const finTipWidth = getSafeNumber(params.finTipWidth, 20);\n  const finThickness = getSafeNumber(params.finThickness, 2);\n  const bodyLeftX = x - bodyWidth / 2;\n  const bodyRightX = x + bodyWidth / 2;\n  const finBottomY = y;\n  const finTopY = finBottomY - finBaseWidth;\n\n  // たわみを考慮した修正（ラジアンに変換）\n  const deflectionAngle = deflection * Math.PI / 180;\n\n  // 後退代がマイナスの場合の処理を追加\n  let tipTopY, tipBottomY;\n  if (finSweepLength >= 0) {\n    // 通常の正の後退代の場合\n    tipTopY = finTopY + finSweepLength;\n    tipBottomY = tipTopY + finTipWidth;\n  } else {\n    // 後退代がマイナスの場合（前進翼）\n    tipTopY = finTopY - Math.abs(finSweepLength);\n    tipBottomY = tipTopY + finTipWidth;\n  }\n\n  // たわみを適用したフィン座標\n  const leftFinTipX = bodyLeftX - finHeight * Math.cos(deflectionAngle);\n  const leftFinTipY = tipTopY + finHeight * Math.sin(deflectionAngle);\n  const leftFinBottomTipX = bodyLeftX - finHeight * Math.cos(deflectionAngle);\n  const leftFinBottomTipY = tipBottomY + finHeight * Math.sin(deflectionAngle);\n  const rightFinTipX = bodyRightX + finHeight * Math.cos(deflectionAngle);\n  const rightFinTipY = tipTopY + finHeight * Math.sin(deflectionAngle);\n  const rightFinBottomTipX = bodyRightX + finHeight * Math.cos(deflectionAngle);\n  const rightFinBottomTipY = tipBottomY + finHeight * Math.sin(deflectionAngle);\n\n  // フィン形状のパス作成\n  const leftFin = `M ${bodyLeftX} ${finTopY}\n                   L ${bodyLeftX} ${finBottomY}\n                   L ${leftFinBottomTipX} ${leftFinBottomTipY}\n                   L ${leftFinTipX} ${leftFinTipY} Z`;\n  const rightFin = `M ${bodyRightX} ${finTopY}\n                    L ${bodyRightX} ${finBottomY}\n                    L ${rightFinBottomTipX} ${rightFinBottomTipY}\n                    L ${rightFinTipX} ${rightFinTipY} Z`;\n\n  // 中央フィンの描画 - 後退代がマイナスの場合の処理を追加\n  const halfThickness = finThickness / 2;\n  let frontExtension = 0;\n  let finExtension = 0;\n  if (finSweepLength < 0) {\n    // 前進翼の場合\n    frontExtension = Math.abs(finSweepLength);\n  }\n\n  // フィンの後端がボディ後端より後ろに出る場合を計算\n  finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n  const centerFins = `M ${x - halfThickness} ${finTopY - frontExtension}\n                      L ${x - halfThickness} ${finBottomY}\n                      L ${x - halfThickness} ${finBottomY + finExtension}\n                      L ${x + halfThickness} ${finBottomY + finExtension}\n                      L ${x + halfThickness} ${finBottomY}\n                      L ${x + halfThickness} ${finTopY - frontExtension} Z`;\n  return {\n    leftFin,\n    rightFin,\n    centerFins\n  };\n};\n\n/**\n * ロケット姿勢表示コンポーネント\n * @param {Object} props - コンポーネントプロパティ\n * @returns {JSX.Element} 姿勢表示コンポーネント\n */\nexport const AttitudeDisplay = ({\n  rocketSim,\n  position,\n  circleRadius = 90\n}) => {\n  if (!rocketSim || !position) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u30C7\\u30FC\\u30BF\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 姿勢表示用のスケール計算\n  const attitudeDisplayScale = calculateAttitudeDisplayScale(rocketSim, circleRadius);\n\n  // スケールに合わせてパラメータを変換\n  const attitudeRocketParams = {\n    noseShape: rocketSim.noseShape,\n    bodyWidth: rocketSim.bodyWidth * attitudeDisplayScale,\n    bodyHeight: rocketSim.bodyHeight * attitudeDisplayScale,\n    noseHeight: rocketSim.noseHeight * attitudeDisplayScale,\n    finHeight: rocketSim.finHeight * attitudeDisplayScale,\n    finBaseWidth: rocketSim.finBaseWidth * attitudeDisplayScale,\n    finTipWidth: rocketSim.finTipWidth * attitudeDisplayScale,\n    finThickness: rocketSim.finThickness * attitudeDisplayScale,\n    finSweepLength: rocketSim.finSweepLength * attitudeDisplayScale\n  };\n\n  // 重心位置の計算（スケールに合わせて）\n  const cogY = rocketSim.centerOfGravity * attitudeDisplayScale;\n\n  // 重心位置に基づいて回転中心を計算\n  // 重心位置はノーズ先端からの距離なので、本体高さから重心位置を引くことで底部からの距離を計算\n  const cogToBottom = attitudeRocketParams.bodyHeight + attitudeRocketParams.noseHeight - cogY;\n\n  // 現在の回転角度（度）\n  const currentAngleDegrees = position.rotation % 360 || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-white rounded-lg border p-4 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"font-semibold mb-2\",\n      children: \"\\u30ED\\u30B1\\u30C3\\u30C8\\u59FF\\u52E2\\u8868\\u793A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: 200,\n        height: 200,\n        viewBox: \"-100 -100 200 200\",\n        className: \"border-2 border-gray-300 rounded-full overflow-hidden bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"0\",\n          cy: \"0\",\n          r: \"98\",\n          fill: \"#f0f0f0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), [...Array(12)].map((_, i) => {\n          const angle = i * 30;\n          const radians = (angle - 90) * Math.PI / 180;\n          const x1 = Math.cos(radians) * 80;\n          const y1 = Math.sin(radians) * 80;\n          const x2 = Math.cos(radians) * 90;\n          const y2 = Math.sin(radians) * 90;\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"line\", {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: \"#999\",\n              strokeWidth: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), i % 3 === 0 && /*#__PURE__*/_jsxDEV(\"text\", {\n              x: Math.cos(radians) * 70,\n              y: Math.sin(radians) * 70,\n              textAnchor: \"middle\",\n              dominantBaseline: \"middle\",\n              fontSize: \"10\",\n              fill: \"#666\",\n              children: [angle, \"\\xB0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, `mark-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"-90\",\n          y1: \"0\",\n          x2: \"90\",\n          y2: \"0\",\n          stroke: \"#666\",\n          strokeWidth: \"1\",\n          strokeDasharray: \"3,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"0\",\n          y1: \"-90\",\n          x2: \"0\",\n          y2: \"90\",\n          stroke: \"#666\",\n          strokeWidth: \"1\",\n          strokeDasharray: \"3,2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `rotate(${currentAngleDegrees})`,\n          children: /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(0, ${-cogToBottom})`,\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: getBodyPathForAttitude(0, 0, attitudeRocketParams),\n              fill: \"#9CA3AF\",\n              stroke: \"#374151\",\n              strokeWidth: \"0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: getNosePathForAttitude(0, 0, attitudeRocketParams),\n              fill: \"#D1D5DB\",\n              stroke: \"#374151\",\n              strokeWidth: \"0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: getFinPathsForAttitude(0, 0, attitudeRocketParams).leftFin,\n              fill: \"#6B7280\",\n              stroke: \"#374151\",\n              strokeWidth: \"0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: getFinPathsForAttitude(0, 0, attitudeRocketParams).rightFin,\n              fill: \"#6B7280\",\n              stroke: \"#374151\",\n              strokeWidth: \"0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: getFinPathsForAttitude(0, 0, attitudeRocketParams).centerFins,\n              fill: \"#6B7280\",\n              stroke: \"#374151\",\n              strokeWidth: \"0.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"0\",\n              cy: \"0\",\n              r: \"2\",\n              fill: \"red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"0\",\n          y: \"-85\",\n          textAnchor: \"middle\",\n          fontSize: \"12\",\n          fill: \"#333\",\n          fontWeight: \"bold\",\n          children: [currentAngleDegrees.toFixed(1), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-x-2 gap-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: \"\\u98DB\\u884C\\u30D5\\u30A7\\u30FC\\u30BA:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rocketSim.getCurrentFlightPhase ? rocketSim.getCurrentFlightPhase() : \"初期化中\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: \"\\u767A\\u5C04\\u89D2\\u5EA6:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [rocketSim.launchAngle, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: \"\\u73FE\\u5728\\u89D2\\u5EA6:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [currentAngleDegrees.toFixed(1), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: \"\\u89D2\\u5EA6\\u5909\\u5316:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [(position.rotation - rocketSim.launchAngle).toFixed(1), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold\",\n          children: \"\\u98A8\\u5411\\u304D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rocketSim.windSpeed > 0 ? \"右\" : rocketSim.windSpeed < 0 ? \"左\" : \"なし\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_c = AttitudeDisplay;\nexport default {\n  AttitudeDisplay,\n  getBodyPathForAttitude,\n  getNosePathForAttitude,\n  getFinPathsForAttitude,\n  calculateAttitudeDisplayScale,\n  getSafeNumber\n};\nvar _c;\n$RefreshReg$(_c, \"AttitudeDisplay\");","map":{"version":3,"names":["React","getSafeValue","jsxDEV","_jsxDEV","getSafeNumber","value","defaultValue","undefined","isNaN","isFinite","parsed","parseFloat","calculateAttitudeDisplayScale","rocketParams","circleRadius","noseHeight","bodyHeight","bodyWidth","finHeight","finSweepLength","finTipWidth","finBaseWidth","actualRocketHeight","finExtension","Math","max","widthWithFins","totalHeight","totalWidth","heightScale","widthScale","scale","min","error","console","getBodyPathForAttitude","x","y","params","safeX","safeY","startX","endX","getNosePathForAttitude","noseShape","baseY","topY","controlY","halfWidth","getFinPathsForAttitude","deflection","finThickness","bodyLeftX","bodyRightX","finBottomY","finTopY","deflectionAngle","PI","tipTopY","tipBottomY","abs","leftFinTipX","cos","leftFinTipY","sin","leftFinBottomTipX","leftFinBottomTipY","rightFinTipX","rightFinTipY","rightFinBottomTipX","rightFinBottomTipY","leftFin","rightFin","halfThickness","frontExtension","centerFins","AttitudeDisplay","rocketSim","position","children","fileName","_jsxFileName","lineNumber","columnNumber","attitudeDisplayScale","attitudeRocketParams","cogY","centerOfGravity","cogToBottom","currentAngleDegrees","rotation","className","width","height","viewBox","cx","cy","r","fill","Array","map","_","i","angle","radians","x1","y1","x2","y2","stroke","strokeWidth","textAnchor","dominantBaseline","fontSize","strokeDasharray","transform","d","fontWeight","toFixed","getCurrentFlightPhase","launchAngle","windSpeed","_c","$RefreshReg$"],"sources":["/Users/shinoharatsubasa/Documents/RocketSim_New_2d_integ/src/components/rocket/AttitudeDisplayRenderer.jsx"],"sourcesContent":["// AttitudeDisplayRenderer.jsx\n// ロケット姿勢表示のための専用レンダリングコンポーネント\nimport React from 'react';\nimport { getSafeValue } from './RocketRendering';\n\n/**\n * 安全に数値を取得するユーティリティ関数\n * @param {*} value - 検証する値\n * @param {number} defaultValue - デフォルト値\n * @returns {number} 検証済みの数値\n */\nexport const getSafeNumber = (value, defaultValue = 0) => {\n  // 値がnull、undefined、NaN、無限大の場合はデフォルト値を返す\n  if (value === null || value === undefined || isNaN(value) || !isFinite(value)) {\n    return defaultValue;\n  }\n  // 数値型でない場合、変換を試みる\n  if (typeof value !== 'number') {\n    const parsed = parseFloat(value);\n    // 変換できなければデフォルト値を返す\n    return isNaN(parsed) ? defaultValue : parsed;\n  }\n  return value;\n};\n\n/**\n * 姿勢表示用のロケットスケール計算の改良版\n * @param {Object} rocketParams - ロケットパラメータ\n * @param {number} circleRadius - 表示円の半径\n * @returns {number} 適切なスケール係数\n */\nexport const calculateAttitudeDisplayScale = (rocketParams, circleRadius = 90) => {\n  try {\n    // 必要なパラメータを安全に取得\n    const noseHeight = getSafeNumber(rocketParams.noseHeight, 50);\n    const bodyHeight = getSafeNumber(rocketParams.bodyHeight, 200);\n    const bodyWidth = getSafeNumber(rocketParams.bodyWidth, 30);\n    const finHeight = getSafeNumber(rocketParams.finHeight, 40);\n    const finSweepLength = getSafeNumber(rocketParams.finSweepLength, 0);\n    const finTipWidth = getSafeNumber(rocketParams.finTipWidth, 20);\n    const finBaseWidth = getSafeNumber(rocketParams.finBaseWidth, 30);\n    \n    // ロケットの寸法を計算\n    const actualRocketHeight = noseHeight + bodyHeight;\n    \n    // フィンの後端部分を計算 (前進翼にも対応)\n    const finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n    \n    // 横方向の最大幅を計算（フィン含む）\n    const widthWithFins = bodyWidth + (finHeight * 2);\n    \n    // 全長は機体長 + フィン後端部分\n    const totalHeight = actualRocketHeight + finExtension;\n    const totalWidth = widthWithFins;\n    \n    // アスペクト比を考慮したスケール計算\n    const heightScale = (circleRadius * 1.6) / Math.max(totalHeight, 50);\n    const widthScale = (circleRadius * 1.6) / Math.max(totalWidth, 30);\n    \n    // 小さい方のスケールを採用（全体が表示エリアに収まるように）\n    const scale = Math.min(heightScale, widthScale);\n    \n    // スケールに上限・下限を設定\n    return Math.max(0.1, Math.min(0.5, scale));\n  } catch (error) {\n    console.error('姿勢表示スケール計算エラー:', error);\n    return 0.3; // エラー時のデフォルト値\n  }\n};\n\n/**\n * ロケット本体パスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - 底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @returns {string} SVGパス文字列\n */\nexport const getBodyPathForAttitude = (x, y, params) => {\n  // NaNチェック\n  const safeX = isNaN(x) ? 0 : x;\n  const safeY = isNaN(y) ? 0 : y;\n  \n  // params値のチェック\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const bodyHeight = getSafeNumber(params.bodyHeight, 200);\n  \n  const startX = safeX - bodyWidth / 2;\n  const endX = safeX + bodyWidth / 2;\n  \n  return `M ${startX} ${safeY} \n          L ${startX} ${safeY - bodyHeight} \n          L ${endX} ${safeY - bodyHeight} \n          L ${endX} ${safeY} Z`;\n};\n\n/**\n * ノーズ形状パスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - ボディ底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @returns {string} SVGパス文字列\n */\nexport const getNosePathForAttitude = (x, y, params) => {\n  // パラメータの安全な取得\n  const noseShape = params.noseShape || 'ogive';\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const noseHeight = getSafeNumber(params.noseHeight, 50);\n  const bodyHeight = getSafeNumber(params.bodyHeight, 200);\n  \n  const startX = x - bodyWidth / 2;\n  const endX = x + bodyWidth / 2;\n  const baseY = y - bodyHeight;\n  const topY = baseY - noseHeight;\n  \n  if (noseShape === \"cone\") {\n    // 円錐ノーズ\n    return `M ${startX} ${baseY} L ${x} ${topY} L ${endX} ${baseY} Z`;\n  } else if (noseShape === \"parabola\") {\n    // 放物線ノーズ - 精度向上\n    const controlY = topY + noseHeight * 0.15;\n    return `M ${startX} ${baseY} \n            C ${startX} ${controlY}, ${x} ${topY}, ${x} ${topY}\n            C ${x} ${topY}, ${endX} ${controlY}, ${endX} ${baseY} Z`;\n  } else {\n    // オジブノーズ - 形状の精度向上\n    const halfWidth = bodyWidth / 2;\n    return `M ${startX} ${baseY}\n            Q ${startX + halfWidth * 0.1} ${topY + noseHeight * 0.4}, ${x} ${topY}\n            Q ${endX - halfWidth * 0.1} ${topY + noseHeight * 0.4}, ${endX} ${baseY} Z`;\n  }\n};\n\n/**\n * フィン形状のパスを生成\n * @param {number} x - 中心X座標\n * @param {number} y - ボディ底部Y座標\n * @param {Object} params - ロケットパラメータ\n * @param {number} deflection - たわみ角度（度）\n * @returns {Object} 各フィンのSVGパス文字列\n */\nexport const getFinPathsForAttitude = (x, y, params, deflection = 0) => {\n  // 安全にパラメータを取得\n  const bodyWidth = getSafeNumber(params.bodyWidth, 30);\n  const finHeight = getSafeNumber(params.finHeight, 40);\n  const finBaseWidth = getSafeNumber(params.finBaseWidth, 30);\n  const finSweepLength = getSafeNumber(params.finSweepLength, 0);\n  const finTipWidth = getSafeNumber(params.finTipWidth, 20);\n  const finThickness = getSafeNumber(params.finThickness, 2);\n  \n  const bodyLeftX = x - bodyWidth / 2;\n  const bodyRightX = x + bodyWidth / 2;\n  const finBottomY = y;\n  const finTopY = finBottomY - finBaseWidth;\n  \n  // たわみを考慮した修正（ラジアンに変換）\n  const deflectionAngle = deflection * Math.PI / 180;\n  \n  // 後退代がマイナスの場合の処理を追加\n  let tipTopY, tipBottomY;\n  \n  if (finSweepLength >= 0) {\n    // 通常の正の後退代の場合\n    tipTopY = finTopY + finSweepLength;\n    tipBottomY = tipTopY + finTipWidth;\n  } else {\n    // 後退代がマイナスの場合（前進翼）\n    tipTopY = finTopY - Math.abs(finSweepLength);\n    tipBottomY = tipTopY + finTipWidth;\n  }\n  \n  // たわみを適用したフィン座標\n  const leftFinTipX = bodyLeftX - finHeight * Math.cos(deflectionAngle);\n  const leftFinTipY = tipTopY + finHeight * Math.sin(deflectionAngle);\n  const leftFinBottomTipX = bodyLeftX - finHeight * Math.cos(deflectionAngle);\n  const leftFinBottomTipY = tipBottomY + finHeight * Math.sin(deflectionAngle);\n  \n  const rightFinTipX = bodyRightX + finHeight * Math.cos(deflectionAngle);\n  const rightFinTipY = tipTopY + finHeight * Math.sin(deflectionAngle);\n  const rightFinBottomTipX = bodyRightX + finHeight * Math.cos(deflectionAngle);\n  const rightFinBottomTipY = tipBottomY + finHeight * Math.sin(deflectionAngle);\n  \n  // フィン形状のパス作成\n  const leftFin = `M ${bodyLeftX} ${finTopY}\n                   L ${bodyLeftX} ${finBottomY}\n                   L ${leftFinBottomTipX} ${leftFinBottomTipY}\n                   L ${leftFinTipX} ${leftFinTipY} Z`;\n  \n  const rightFin = `M ${bodyRightX} ${finTopY}\n                    L ${bodyRightX} ${finBottomY}\n                    L ${rightFinBottomTipX} ${rightFinBottomTipY}\n                    L ${rightFinTipX} ${rightFinTipY} Z`;\n  \n  // 中央フィンの描画 - 後退代がマイナスの場合の処理を追加\n  const halfThickness = finThickness / 2;\n  let frontExtension = 0;\n  let finExtension = 0;\n  \n  if (finSweepLength < 0) {\n    // 前進翼の場合\n    frontExtension = Math.abs(finSweepLength);\n  }\n  \n  // フィンの後端がボディ後端より後ろに出る場合を計算\n  finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n  \n  const centerFins = `M ${x - halfThickness} ${finTopY - frontExtension}\n                      L ${x - halfThickness} ${finBottomY}\n                      L ${x - halfThickness} ${finBottomY + finExtension}\n                      L ${x + halfThickness} ${finBottomY + finExtension}\n                      L ${x + halfThickness} ${finBottomY}\n                      L ${x + halfThickness} ${finTopY - frontExtension} Z`;\n\n  return { leftFin, rightFin, centerFins };\n};\n\n/**\n * ロケット姿勢表示コンポーネント\n * @param {Object} props - コンポーネントプロパティ\n * @returns {JSX.Element} 姿勢表示コンポーネント\n */\nexport const AttitudeDisplay = ({\n  rocketSim,\n  position,\n  circleRadius = 90\n}) => {\n  if (!rocketSim || !position) {\n    return <div>データ読み込み中...</div>;\n  }\n\n  // 姿勢表示用のスケール計算\n  const attitudeDisplayScale = calculateAttitudeDisplayScale(rocketSim, circleRadius);\n\n  // スケールに合わせてパラメータを変換\n  const attitudeRocketParams = {\n    noseShape: rocketSim.noseShape,\n    bodyWidth: rocketSim.bodyWidth * attitudeDisplayScale,\n    bodyHeight: rocketSim.bodyHeight * attitudeDisplayScale,\n    noseHeight: rocketSim.noseHeight * attitudeDisplayScale,\n    finHeight: rocketSim.finHeight * attitudeDisplayScale,\n    finBaseWidth: rocketSim.finBaseWidth * attitudeDisplayScale,\n    finTipWidth: rocketSim.finTipWidth * attitudeDisplayScale,\n    finThickness: rocketSim.finThickness * attitudeDisplayScale,\n    finSweepLength: rocketSim.finSweepLength * attitudeDisplayScale\n  };\n\n  // 重心位置の計算（スケールに合わせて）\n  const cogY = rocketSim.centerOfGravity * attitudeDisplayScale;\n\n  // 重心位置に基づいて回転中心を計算\n  // 重心位置はノーズ先端からの距離なので、本体高さから重心位置を引くことで底部からの距離を計算\n  const cogToBottom = attitudeRocketParams.bodyHeight + attitudeRocketParams.noseHeight - cogY;\n\n  // 現在の回転角度（度）\n  const currentAngleDegrees = (position.rotation % 360) || 0;\n\n  return (\n    <div className=\"w-full bg-white rounded-lg border p-4 flex flex-col items-center\">\n      <h4 className=\"font-semibold mb-2\">ロケット姿勢表示</h4>\n      \n      {/* 円形の窓 */}\n      <div className=\"relative\">\n        <svg \n          width={200} \n          height={200} \n          viewBox=\"-100 -100 200 200\"\n          className=\"border-2 border-gray-300 rounded-full overflow-hidden bg-gray-50\"\n        >\n          {/* 背景の円 */}\n          <circle cx=\"0\" cy=\"0\" r=\"98\" fill=\"#f0f0f0\" />\n          \n          {/* 角度目盛り */}\n          {[...Array(12)].map((_, i) => {\n            const angle = i * 30;\n            const radians = (angle - 90) * Math.PI / 180;\n            const x1 = Math.cos(radians) * 80;\n            const y1 = Math.sin(radians) * 80;\n            const x2 = Math.cos(radians) * 90;\n            const y2 = Math.sin(radians) * 90;\n            \n            return (\n              <g key={`mark-${i}`}>\n                <line \n                  x1={x1} \n                  y1={y1} \n                  x2={x2} \n                  y2={y2} \n                  stroke=\"#999\" \n                  strokeWidth=\"1\" \n                />\n                {i % 3 === 0 && (\n                  <text \n                    x={Math.cos(radians) * 70} \n                    y={Math.sin(radians) * 70} \n                    textAnchor=\"middle\" \n                    dominantBaseline=\"middle\"\n                    fontSize=\"10\"\n                    fill=\"#666\"\n                  >\n                    {angle}°\n                  </text>\n                )}\n              </g>\n            );\n          })}\n          \n          {/* 水平線と垂直線 */}\n          <line x1=\"-90\" y1=\"0\" x2=\"90\" y2=\"0\" stroke=\"#666\" strokeWidth=\"1\" strokeDasharray=\"3,2\" />\n          <line x1=\"0\" y1=\"-90\" x2=\"0\" y2=\"90\" stroke=\"#666\" strokeWidth=\"1\" strokeDasharray=\"3,2\" />\n          \n          {/* ロケット - 姿勢角度を表示（重心を中心に回転） */}\n          <g transform={`rotate(${currentAngleDegrees})`}>\n            {/* ロケット本体 - 重心に基づいて正確に位置調整 */}\n            <g transform={`translate(0, ${-cogToBottom})`}>\n              {/* ボディ */}\n              <path\n                d={getBodyPathForAttitude(0, 0, attitudeRocketParams)}\n                fill=\"#9CA3AF\"\n                stroke=\"#374151\"\n                strokeWidth=\"0.5\"\n              />\n              \n              {/* ノーズ - 更新された描画関数を使用 */}\n              <path\n                d={getNosePathForAttitude(0, 0, attitudeRocketParams)}\n                fill=\"#D1D5DB\"\n                stroke=\"#374151\"\n                strokeWidth=\"0.5\"\n              />\n              \n              {/* フィン - 改良されたフィン描画関数を使用 */}\n              <path\n                d={getFinPathsForAttitude(0, 0, attitudeRocketParams).leftFin}\n                fill=\"#6B7280\"\n                stroke=\"#374151\"\n                strokeWidth=\"0.5\"\n              />\n              <path\n                d={getFinPathsForAttitude(0, 0, attitudeRocketParams).rightFin}\n                fill=\"#6B7280\"\n                stroke=\"#374151\"\n                strokeWidth=\"0.5\"\n              />\n              <path\n                d={getFinPathsForAttitude(0, 0, attitudeRocketParams).centerFins}\n                fill=\"#6B7280\"\n                stroke=\"#374151\"\n                strokeWidth=\"0.5\"\n              />\n              \n              {/* 重心位置のマーカー */}\n              <circle cx=\"0\" cy=\"0\" r=\"2\" fill=\"red\" />\n            </g>\n          </g>\n          \n          {/* 現在の角度表示 */}\n          <text \n            x=\"0\" \n            y=\"-85\" \n            textAnchor=\"middle\" \n            fontSize=\"12\" \n            fill=\"#333\"\n            fontWeight=\"bold\"\n          >\n            {currentAngleDegrees.toFixed(1)}°\n          </text>\n        </svg>\n      </div>\n      \n      {/* 姿勢に関する追加情報 */}\n      <div className=\"mt-4 text-sm\">\n        <div className=\"grid grid-cols-2 gap-x-2 gap-y-1\">\n          <div className=\"font-semibold\">飛行フェーズ:</div>\n          <div>{rocketSim.getCurrentFlightPhase ? rocketSim.getCurrentFlightPhase() : \"初期化中\"}</div>\n          \n          <div className=\"font-semibold\">発射角度:</div>\n          <div>{rocketSim.launchAngle}°</div>\n          \n          <div className=\"font-semibold\">現在角度:</div>\n          <div>{currentAngleDegrees.toFixed(1)}°</div>\n          \n          <div className=\"font-semibold\">角度変化:</div>\n          <div>{(position.rotation - rocketSim.launchAngle).toFixed(1)}°</div>\n          \n          <div className=\"font-semibold\">風向き:</div>\n          <div>{rocketSim.windSpeed > 0 ? \"右\" : rocketSim.windSpeed < 0 ? \"左\" : \"なし\"}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default {\n  AttitudeDisplay,\n  getBodyPathForAttitude,\n  getNosePathForAttitude,\n  getFinPathsForAttitude,\n  calculateAttitudeDisplayScale,\n  getSafeNumber\n};"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,mBAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,YAAY,GAAG,CAAC,KAAK;EACxD;EACA,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,IAAIC,KAAK,CAACH,KAAK,CAAC,IAAI,CAACI,QAAQ,CAACJ,KAAK,CAAC,EAAE;IAC7E,OAAOC,YAAY;EACrB;EACA;EACA,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAMK,MAAM,GAAGC,UAAU,CAACN,KAAK,CAAC;IAChC;IACA,OAAOG,KAAK,CAACE,MAAM,CAAC,GAAGJ,YAAY,GAAGI,MAAM;EAC9C;EACA,OAAOL,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMO,6BAA6B,GAAGA,CAACC,YAAY,EAAEC,YAAY,GAAG,EAAE,KAAK;EAChF,IAAI;IACF;IACA,MAAMC,UAAU,GAAGX,aAAa,CAACS,YAAY,CAACE,UAAU,EAAE,EAAE,CAAC;IAC7D,MAAMC,UAAU,GAAGZ,aAAa,CAACS,YAAY,CAACG,UAAU,EAAE,GAAG,CAAC;IAC9D,MAAMC,SAAS,GAAGb,aAAa,CAACS,YAAY,CAACI,SAAS,EAAE,EAAE,CAAC;IAC3D,MAAMC,SAAS,GAAGd,aAAa,CAACS,YAAY,CAACK,SAAS,EAAE,EAAE,CAAC;IAC3D,MAAMC,cAAc,GAAGf,aAAa,CAACS,YAAY,CAACM,cAAc,EAAE,CAAC,CAAC;IACpE,MAAMC,WAAW,GAAGhB,aAAa,CAACS,YAAY,CAACO,WAAW,EAAE,EAAE,CAAC;IAC/D,MAAMC,YAAY,GAAGjB,aAAa,CAACS,YAAY,CAACQ,YAAY,EAAE,EAAE,CAAC;;IAEjE;IACA,MAAMC,kBAAkB,GAAGP,UAAU,GAAGC,UAAU;;IAElD;IACA,MAAMO,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,cAAc,GAAGC,WAAW,GAAGC,YAAY,CAAC;;IAE7E;IACA,MAAMK,aAAa,GAAGT,SAAS,GAAIC,SAAS,GAAG,CAAE;;IAEjD;IACA,MAAMS,WAAW,GAAGL,kBAAkB,GAAGC,YAAY;IACrD,MAAMK,UAAU,GAAGF,aAAa;;IAEhC;IACA,MAAMG,WAAW,GAAIf,YAAY,GAAG,GAAG,GAAIU,IAAI,CAACC,GAAG,CAACE,WAAW,EAAE,EAAE,CAAC;IACpE,MAAMG,UAAU,GAAIhB,YAAY,GAAG,GAAG,GAAIU,IAAI,CAACC,GAAG,CAACG,UAAU,EAAE,EAAE,CAAC;;IAElE;IACA,MAAMG,KAAK,GAAGP,IAAI,CAACQ,GAAG,CAACH,WAAW,EAAEC,UAAU,CAAC;;IAE/C;IACA,OAAON,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACQ,GAAG,CAAC,GAAG,EAAED,KAAK,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO,GAAG,CAAC,CAAC;EACd;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,sBAAsB,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,MAAM,KAAK;EACtD;EACA,MAAMC,KAAK,GAAG/B,KAAK,CAAC4B,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;EAC9B,MAAMI,KAAK,GAAGhC,KAAK,CAAC6B,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;;EAE9B;EACA,MAAMpB,SAAS,GAAGb,aAAa,CAACkC,MAAM,CAACrB,SAAS,EAAE,EAAE,CAAC;EACrD,MAAMD,UAAU,GAAGZ,aAAa,CAACkC,MAAM,CAACtB,UAAU,EAAE,GAAG,CAAC;EAExD,MAAMyB,MAAM,GAAGF,KAAK,GAAGtB,SAAS,GAAG,CAAC;EACpC,MAAMyB,IAAI,GAAGH,KAAK,GAAGtB,SAAS,GAAG,CAAC;EAElC,OAAO,KAAKwB,MAAM,IAAID,KAAK;AAC7B,cAAcC,MAAM,IAAID,KAAK,GAAGxB,UAAU;AAC1C,cAAc0B,IAAI,IAAIF,KAAK,GAAGxB,UAAU;AACxC,cAAc0B,IAAI,IAAIF,KAAK,IAAI;AAC/B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,sBAAsB,GAAGA,CAACP,CAAC,EAAEC,CAAC,EAAEC,MAAM,KAAK;EACtD;EACA,MAAMM,SAAS,GAAGN,MAAM,CAACM,SAAS,IAAI,OAAO;EAC7C,MAAM3B,SAAS,GAAGb,aAAa,CAACkC,MAAM,CAACrB,SAAS,EAAE,EAAE,CAAC;EACrD,MAAMF,UAAU,GAAGX,aAAa,CAACkC,MAAM,CAACvB,UAAU,EAAE,EAAE,CAAC;EACvD,MAAMC,UAAU,GAAGZ,aAAa,CAACkC,MAAM,CAACtB,UAAU,EAAE,GAAG,CAAC;EAExD,MAAMyB,MAAM,GAAGL,CAAC,GAAGnB,SAAS,GAAG,CAAC;EAChC,MAAMyB,IAAI,GAAGN,CAAC,GAAGnB,SAAS,GAAG,CAAC;EAC9B,MAAM4B,KAAK,GAAGR,CAAC,GAAGrB,UAAU;EAC5B,MAAM8B,IAAI,GAAGD,KAAK,GAAG9B,UAAU;EAE/B,IAAI6B,SAAS,KAAK,MAAM,EAAE;IACxB;IACA,OAAO,KAAKH,MAAM,IAAII,KAAK,MAAMT,CAAC,IAAIU,IAAI,MAAMJ,IAAI,IAAIG,KAAK,IAAI;EACnE,CAAC,MAAM,IAAID,SAAS,KAAK,UAAU,EAAE;IACnC;IACA,MAAMG,QAAQ,GAAGD,IAAI,GAAG/B,UAAU,GAAG,IAAI;IACzC,OAAO,KAAK0B,MAAM,IAAII,KAAK;AAC/B,gBAAgBJ,MAAM,IAAIM,QAAQ,KAAKX,CAAC,IAAIU,IAAI,KAAKV,CAAC,IAAIU,IAAI;AAC9D,gBAAgBV,CAAC,IAAIU,IAAI,KAAKJ,IAAI,IAAIK,QAAQ,KAAKL,IAAI,IAAIG,KAAK,IAAI;EAClE,CAAC,MAAM;IACL;IACA,MAAMG,SAAS,GAAG/B,SAAS,GAAG,CAAC;IAC/B,OAAO,KAAKwB,MAAM,IAAII,KAAK;AAC/B,gBAAgBJ,MAAM,GAAGO,SAAS,GAAG,GAAG,IAAIF,IAAI,GAAG/B,UAAU,GAAG,GAAG,KAAKqB,CAAC,IAAIU,IAAI;AACjF,gBAAgBJ,IAAI,GAAGM,SAAS,GAAG,GAAG,IAAIF,IAAI,GAAG/B,UAAU,GAAG,GAAG,KAAK2B,IAAI,IAAIG,KAAK,IAAI;EACrF;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,sBAAsB,GAAGA,CAACb,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEY,UAAU,GAAG,CAAC,KAAK;EACtE;EACA,MAAMjC,SAAS,GAAGb,aAAa,CAACkC,MAAM,CAACrB,SAAS,EAAE,EAAE,CAAC;EACrD,MAAMC,SAAS,GAAGd,aAAa,CAACkC,MAAM,CAACpB,SAAS,EAAE,EAAE,CAAC;EACrD,MAAMG,YAAY,GAAGjB,aAAa,CAACkC,MAAM,CAACjB,YAAY,EAAE,EAAE,CAAC;EAC3D,MAAMF,cAAc,GAAGf,aAAa,CAACkC,MAAM,CAACnB,cAAc,EAAE,CAAC,CAAC;EAC9D,MAAMC,WAAW,GAAGhB,aAAa,CAACkC,MAAM,CAAClB,WAAW,EAAE,EAAE,CAAC;EACzD,MAAM+B,YAAY,GAAG/C,aAAa,CAACkC,MAAM,CAACa,YAAY,EAAE,CAAC,CAAC;EAE1D,MAAMC,SAAS,GAAGhB,CAAC,GAAGnB,SAAS,GAAG,CAAC;EACnC,MAAMoC,UAAU,GAAGjB,CAAC,GAAGnB,SAAS,GAAG,CAAC;EACpC,MAAMqC,UAAU,GAAGjB,CAAC;EACpB,MAAMkB,OAAO,GAAGD,UAAU,GAAGjC,YAAY;;EAEzC;EACA,MAAMmC,eAAe,GAAGN,UAAU,GAAG1B,IAAI,CAACiC,EAAE,GAAG,GAAG;;EAElD;EACA,IAAIC,OAAO,EAAEC,UAAU;EAEvB,IAAIxC,cAAc,IAAI,CAAC,EAAE;IACvB;IACAuC,OAAO,GAAGH,OAAO,GAAGpC,cAAc;IAClCwC,UAAU,GAAGD,OAAO,GAAGtC,WAAW;EACpC,CAAC,MAAM;IACL;IACAsC,OAAO,GAAGH,OAAO,GAAG/B,IAAI,CAACoC,GAAG,CAACzC,cAAc,CAAC;IAC5CwC,UAAU,GAAGD,OAAO,GAAGtC,WAAW;EACpC;;EAEA;EACA,MAAMyC,WAAW,GAAGT,SAAS,GAAGlC,SAAS,GAAGM,IAAI,CAACsC,GAAG,CAACN,eAAe,CAAC;EACrE,MAAMO,WAAW,GAAGL,OAAO,GAAGxC,SAAS,GAAGM,IAAI,CAACwC,GAAG,CAACR,eAAe,CAAC;EACnE,MAAMS,iBAAiB,GAAGb,SAAS,GAAGlC,SAAS,GAAGM,IAAI,CAACsC,GAAG,CAACN,eAAe,CAAC;EAC3E,MAAMU,iBAAiB,GAAGP,UAAU,GAAGzC,SAAS,GAAGM,IAAI,CAACwC,GAAG,CAACR,eAAe,CAAC;EAE5E,MAAMW,YAAY,GAAGd,UAAU,GAAGnC,SAAS,GAAGM,IAAI,CAACsC,GAAG,CAACN,eAAe,CAAC;EACvE,MAAMY,YAAY,GAAGV,OAAO,GAAGxC,SAAS,GAAGM,IAAI,CAACwC,GAAG,CAACR,eAAe,CAAC;EACpE,MAAMa,kBAAkB,GAAGhB,UAAU,GAAGnC,SAAS,GAAGM,IAAI,CAACsC,GAAG,CAACN,eAAe,CAAC;EAC7E,MAAMc,kBAAkB,GAAGX,UAAU,GAAGzC,SAAS,GAAGM,IAAI,CAACwC,GAAG,CAACR,eAAe,CAAC;;EAE7E;EACA,MAAMe,OAAO,GAAG,KAAKnB,SAAS,IAAIG,OAAO;AAC3C,uBAAuBH,SAAS,IAAIE,UAAU;AAC9C,uBAAuBW,iBAAiB,IAAIC,iBAAiB;AAC7D,uBAAuBL,WAAW,IAAIE,WAAW,IAAI;EAEnD,MAAMS,QAAQ,GAAG,KAAKnB,UAAU,IAAIE,OAAO;AAC7C,wBAAwBF,UAAU,IAAIC,UAAU;AAChD,wBAAwBe,kBAAkB,IAAIC,kBAAkB;AAChE,wBAAwBH,YAAY,IAAIC,YAAY,IAAI;;EAEtD;EACA,MAAMK,aAAa,GAAGtB,YAAY,GAAG,CAAC;EACtC,IAAIuB,cAAc,GAAG,CAAC;EACtB,IAAInD,YAAY,GAAG,CAAC;EAEpB,IAAIJ,cAAc,GAAG,CAAC,EAAE;IACtB;IACAuD,cAAc,GAAGlD,IAAI,CAACoC,GAAG,CAACzC,cAAc,CAAC;EAC3C;;EAEA;EACAI,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,cAAc,GAAGC,WAAW,GAAGC,YAAY,CAAC;EAEvE,MAAMsD,UAAU,GAAG,KAAKvC,CAAC,GAAGqC,aAAa,IAAIlB,OAAO,GAAGmB,cAAc;AACvE,0BAA0BtC,CAAC,GAAGqC,aAAa,IAAInB,UAAU;AACzD,0BAA0BlB,CAAC,GAAGqC,aAAa,IAAInB,UAAU,GAAG/B,YAAY;AACxE,0BAA0Ba,CAAC,GAAGqC,aAAa,IAAInB,UAAU,GAAG/B,YAAY;AACxE,0BAA0Ba,CAAC,GAAGqC,aAAa,IAAInB,UAAU;AACzD,0BAA0BlB,CAAC,GAAGqC,aAAa,IAAIlB,OAAO,GAAGmB,cAAc,IAAI;EAEzE,OAAO;IAAEH,OAAO;IAAEC,QAAQ;IAAEG;EAAW,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAC9BC,SAAS;EACTC,QAAQ;EACRhE,YAAY,GAAG;AACjB,CAAC,KAAK;EACJ,IAAI,CAAC+D,SAAS,IAAI,CAACC,QAAQ,EAAE;IAC3B,oBAAO3E,OAAA;MAAA4E,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B;;EAEA;EACA,MAAMC,oBAAoB,GAAGxE,6BAA6B,CAACiE,SAAS,EAAE/D,YAAY,CAAC;;EAEnF;EACA,MAAMuE,oBAAoB,GAAG;IAC3BzC,SAAS,EAAEiC,SAAS,CAACjC,SAAS;IAC9B3B,SAAS,EAAE4D,SAAS,CAAC5D,SAAS,GAAGmE,oBAAoB;IACrDpE,UAAU,EAAE6D,SAAS,CAAC7D,UAAU,GAAGoE,oBAAoB;IACvDrE,UAAU,EAAE8D,SAAS,CAAC9D,UAAU,GAAGqE,oBAAoB;IACvDlE,SAAS,EAAE2D,SAAS,CAAC3D,SAAS,GAAGkE,oBAAoB;IACrD/D,YAAY,EAAEwD,SAAS,CAACxD,YAAY,GAAG+D,oBAAoB;IAC3DhE,WAAW,EAAEyD,SAAS,CAACzD,WAAW,GAAGgE,oBAAoB;IACzDjC,YAAY,EAAE0B,SAAS,CAAC1B,YAAY,GAAGiC,oBAAoB;IAC3DjE,cAAc,EAAE0D,SAAS,CAAC1D,cAAc,GAAGiE;EAC7C,CAAC;;EAED;EACA,MAAME,IAAI,GAAGT,SAAS,CAACU,eAAe,GAAGH,oBAAoB;;EAE7D;EACA;EACA,MAAMI,WAAW,GAAGH,oBAAoB,CAACrE,UAAU,GAAGqE,oBAAoB,CAACtE,UAAU,GAAGuE,IAAI;;EAE5F;EACA,MAAMG,mBAAmB,GAAIX,QAAQ,CAACY,QAAQ,GAAG,GAAG,IAAK,CAAC;EAE1D,oBACEvF,OAAA;IAAKwF,SAAS,EAAC,kEAAkE;IAAAZ,QAAA,gBAC/E5E,OAAA;MAAIwF,SAAS,EAAC,oBAAoB;MAAAZ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhDhF,OAAA;MAAKwF,SAAS,EAAC,UAAU;MAAAZ,QAAA,eACvB5E,OAAA;QACEyF,KAAK,EAAE,GAAI;QACXC,MAAM,EAAE,GAAI;QACZC,OAAO,EAAC,mBAAmB;QAC3BH,SAAS,EAAC,kEAAkE;QAAAZ,QAAA,gBAG5E5E,OAAA;UAAQ4F,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,GAAG;UAACC,CAAC,EAAC,IAAI;UAACC,IAAI,EAAC;QAAS;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAG7C,CAAC,GAAGgB,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC5B,MAAMC,KAAK,GAAGD,CAAC,GAAG,EAAE;UACpB,MAAME,OAAO,GAAG,CAACD,KAAK,GAAG,EAAE,IAAI/E,IAAI,CAACiC,EAAE,GAAG,GAAG;UAC5C,MAAMgD,EAAE,GAAGjF,IAAI,CAACsC,GAAG,CAAC0C,OAAO,CAAC,GAAG,EAAE;UACjC,MAAME,EAAE,GAAGlF,IAAI,CAACwC,GAAG,CAACwC,OAAO,CAAC,GAAG,EAAE;UACjC,MAAMG,EAAE,GAAGnF,IAAI,CAACsC,GAAG,CAAC0C,OAAO,CAAC,GAAG,EAAE;UACjC,MAAMI,EAAE,GAAGpF,IAAI,CAACwC,GAAG,CAACwC,OAAO,CAAC,GAAG,EAAE;UAEjC,oBACErG,OAAA;YAAA4E,QAAA,gBACE5E,OAAA;cACEsG,EAAE,EAAEA,EAAG;cACPC,EAAE,EAAEA,EAAG;cACPC,EAAE,EAAEA,EAAG;cACPC,EAAE,EAAEA,EAAG;cACPC,MAAM,EAAC,MAAM;cACbC,WAAW,EAAC;YAAG;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,EACDmB,CAAC,GAAG,CAAC,KAAK,CAAC,iBACVnG,OAAA;cACEiC,CAAC,EAAEZ,IAAI,CAACsC,GAAG,CAAC0C,OAAO,CAAC,GAAG,EAAG;cAC1BnE,CAAC,EAAEb,IAAI,CAACwC,GAAG,CAACwC,OAAO,CAAC,GAAG,EAAG;cAC1BO,UAAU,EAAC,QAAQ;cACnBC,gBAAgB,EAAC,QAAQ;cACzBC,QAAQ,EAAC,IAAI;cACbf,IAAI,EAAC,MAAM;cAAAnB,QAAA,GAEVwB,KAAK,EAAC,MACT;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP;UAAA,GApBK,QAAQmB,CAAC,EAAE;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBhB,CAAC;QAER,CAAC,CAAC,eAGFhF,OAAA;UAAMsG,EAAE,EAAC,KAAK;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,GAAG;UAACC,MAAM,EAAC,MAAM;UAACC,WAAW,EAAC,GAAG;UAACI,eAAe,EAAC;QAAK;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3FhF,OAAA;UAAMsG,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,KAAK;UAACC,EAAE,EAAC,GAAG;UAACC,EAAE,EAAC,IAAI;UAACC,MAAM,EAAC,MAAM;UAACC,WAAW,EAAC,GAAG;UAACI,eAAe,EAAC;QAAK;UAAAlC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG3FhF,OAAA;UAAGgH,SAAS,EAAE,UAAU1B,mBAAmB,GAAI;UAAAV,QAAA,eAE7C5E,OAAA;YAAGgH,SAAS,EAAE,gBAAgB,CAAC3B,WAAW,GAAI;YAAAT,QAAA,gBAE5C5E,OAAA;cACEiH,CAAC,EAAEjF,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAEkD,oBAAoB,CAAE;cACtDa,IAAI,EAAC,SAAS;cACdW,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAK;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eAGFhF,OAAA;cACEiH,CAAC,EAAEzE,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAE0C,oBAAoB,CAAE;cACtDa,IAAI,EAAC,SAAS;cACdW,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAK;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eAGFhF,OAAA;cACEiH,CAAC,EAAEnE,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAEoC,oBAAoB,CAAC,CAACd,OAAQ;cAC9D2B,IAAI,EAAC,SAAS;cACdW,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAK;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFhF,OAAA;cACEiH,CAAC,EAAEnE,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAEoC,oBAAoB,CAAC,CAACb,QAAS;cAC/D0B,IAAI,EAAC,SAAS;cACdW,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAK;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFhF,OAAA;cACEiH,CAAC,EAAEnE,sBAAsB,CAAC,CAAC,EAAE,CAAC,EAAEoC,oBAAoB,CAAC,CAACV,UAAW;cACjEuB,IAAI,EAAC,SAAS;cACdW,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAK;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eAGFhF,OAAA;cAAQ4F,EAAE,EAAC,GAAG;cAACC,EAAE,EAAC,GAAG;cAACC,CAAC,EAAC,GAAG;cAACC,IAAI,EAAC;YAAK;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGJhF,OAAA;UACEiC,CAAC,EAAC,GAAG;UACLC,CAAC,EAAC,KAAK;UACP0E,UAAU,EAAC,QAAQ;UACnBE,QAAQ,EAAC,IAAI;UACbf,IAAI,EAAC,MAAM;UACXmB,UAAU,EAAC,MAAM;UAAAtC,QAAA,GAEhBU,mBAAmB,CAAC6B,OAAO,CAAC,CAAC,CAAC,EAAC,MAClC;QAAA;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNhF,OAAA;MAAKwF,SAAS,EAAC,cAAc;MAAAZ,QAAA,eAC3B5E,OAAA;QAAKwF,SAAS,EAAC,kCAAkC;QAAAZ,QAAA,gBAC/C5E,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5ChF,OAAA;UAAA4E,QAAA,EAAMF,SAAS,CAAC0C,qBAAqB,GAAG1C,SAAS,CAAC0C,qBAAqB,CAAC,CAAC,GAAG;QAAM;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEzFhF,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1ChF,OAAA;UAAA4E,QAAA,GAAMF,SAAS,CAAC2C,WAAW,EAAC,MAAC;QAAA;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEnChF,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1ChF,OAAA;UAAA4E,QAAA,GAAMU,mBAAmB,CAAC6B,OAAO,CAAC,CAAC,CAAC,EAAC,MAAC;QAAA;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAE5ChF,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1ChF,OAAA;UAAA4E,QAAA,GAAM,CAACD,QAAQ,CAACY,QAAQ,GAAGb,SAAS,CAAC2C,WAAW,EAAEF,OAAO,CAAC,CAAC,CAAC,EAAC,MAAC;QAAA;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEpEhF,OAAA;UAAKwF,SAAS,EAAC,eAAe;UAAAZ,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzChF,OAAA;UAAA4E,QAAA,EAAMF,SAAS,CAAC4C,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG5C,SAAS,CAAC4C,SAAS,GAAG,CAAC,GAAG,GAAG,GAAG;QAAI;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACuC,EAAA,GAzKW9C,eAAe;AA2K5B,eAAe;EACbA,eAAe;EACfzC,sBAAsB;EACtBQ,sBAAsB;EACtBM,sBAAsB;EACtBrC,6BAA6B;EAC7BR;AACF,CAAC;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}