{"ast":null,"code":"var _jsxFileName = \"/Users/shinoharatsubasa/Documents/RocketSim_New_2d_integ/src/components/rocket/RocketSimulator.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// メインのシミュレーターコンポーネント\nimport React, { useState, useCallback, useEffect, useMemo, useRef } from 'react';\n\n// 定数とデータ定義のインポート\nimport { SVG_CONFIG, MOTOR_THRUST_DATA, PARACHUTE_SIZES, FIN_MATERIALS, NOSE_SHAPES, WIND_PROFILES, PHYSICAL_CONSTANTS, ANGLE_RESPONSE_DT, ANGLE_STEPS_PER_UPDATE, ANIMATION_SPEED, SLIDER_DEBOUNCE_TIME, mmToM, gToKg, UI_CONFIG, ANALYSIS_VIEW_CONFIG } from './RocketConstants';\n\n// 物理計算関連のインポート\nimport { calculateProjectedArea, calculateVolume, calculateCenterOfPressure, calculateAerodynamicCenter, calculateStabilityCenterOfPressure, calculateStaticMargin, calculateFinDivergenceSpeed, calculateFinFlutterSpeed, formatFinDeflection, formatSpeedValue, calculateWindSpeedAtHeight, calculateFlightPath } from './RocketPhysics';\n\n// SVG描画関連のインポート\nimport { getNosePath, getBodyPath, getLeftFinPath, getRightFinPath, getCenterFinsPath, getParachutePath, getParachuteStringPaths, getWindArrow, getWindProfileArrows, metersToSvgX, metersToSvgY, getActualRocketDimensions, getSafeRotationTransform, getAnalysisViewBox, getDesignViewBox, getRocketTransform, getSafeValue } from './RocketRendering';\n\n// UI関連のコンポーネントのインポート\nimport { WindAngleLimitVisualizer, ResultsPopup, LastFlightResults, ParameterSlider, DesignTab, AnalysisTab } from './RocketUIComponents';\n\n// ロケットデザインとシミュレーションを統合したカスタムフック\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useRocketSimulator = () => {\n  _s();\n  // Design parameters\n  const [noseShape, setNoseShape] = useState(\"ogive\");\n  const [noseHeight, setNoseHeight] = useState(57); // 57mmに変更\n  const [bodyHeight, setBodyHeight] = useState(255); // 255mmに変更\n  const [bodyWidth, setBodyWidth] = useState(31);\n  const [finHeight, setFinHeight] = useState(58.5); // 58.5mmに変更\n  const [finBaseWidth, setFinBaseWidth] = useState(65); // 65mmに変更\n  const [finTipWidth, setFinTipWidth] = useState(25); // 25mmに変更\n  const [finThickness, setFinThickness] = useState(1.5); // 1.5mmに変更\n  const [finSweepLength, setFinSweepLength] = useState(95); // 95mmに変更\n  const [finMaterial, setFinMaterial] = useState(\"light_veneer\");\n  // フィン枚数状態を追加\n  const [finCount, setFinCount] = useState(4); // デフォルトは4枚\n\n  // Analysis parameters\n  const [weight, setWeight] = useState(50);\n  const [centerOfGravity, setCenterOfGravity] = useState(150);\n  const [selectedMotor, setSelectedMotor] = useState(\"A8-3\");\n  const [selectedParachute, setSelectedParachute] = useState(\"φ300\");\n\n  // Simulation parameters\n  const [launchAngle, setLaunchAngle] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [windProfile, setWindProfile] = useState(\"uniform\");\n  const [showWindArrows, setShowWindArrows] = useState(true);\n\n  // Simulation state\n  const [isLaunched, setIsLaunched] = useState(false);\n  const [flightData, setFlightData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [animationId, setAnimationId] = useState(null);\n  const [trajectoryScale, setTrajectoryScale] = useState(1.0);\n  const [rocketScale, setRocketScale] = useState(0.1);\n  const [currentHeight, setCurrentHeight] = useState(0);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [currentDistance, setCurrentDistance] = useState(0);\n  const [currentFinDeflection, setCurrentFinDeflection] = useState(0);\n  const [currentMaxHeight, setCurrentMaxHeight] = useState(0);\n  const [currentMaxSpeed, setCurrentMaxSpeed] = useState(0);\n  const [currentMaxDistance, setCurrentMaxDistance] = useState(0);\n  const [currentMaxFinDeflection, setCurrentMaxFinDeflection] = useState(0);\n  const [completedFlights, setCompletedFlights] = useState([]);\n  const [keyPoints, setKeyPoints] = useState({});\n\n  // 状態変数の追加\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [flightResults, setFlightResults] = useState(null);\n  const [lastFlightResults, setLastFlightResults] = useState(null);\n\n  // 新しく追加した状態変数\n  const [projectedAreas, setProjectedAreas] = useState(null);\n  const [volumes, setVolumes] = useState(null);\n  const [pressureCenter, setPressureCenter] = useState(null);\n  const [aerodynamicCenter, setAerodynamicCenter] = useState(null);\n  const [stabilityCenterOfPressure, setStabilityCenterOfPressure] = useState(null);\n  const [staticMargins, setStaticMargins] = useState(null);\n\n  // useRocketSimulator内で、noseShapeの状態変更を正しく伝播するように修正\n  const setNoseShapeAndUpdate = shape => {\n    setNoseShape(shape);\n    // 他の依存状態も更新を促す\n    const newParams = {\n      ...simulationParams,\n      noseShape: shape\n    };\n\n    // 投影面積などの再計算をトリガー\n    updateCalculatedValues(newParams);\n  };\n\n  // スライダーの動きをスムーズにするためのdebounce用ref\n  const sliderTimeoutRef = useRef(null);\n\n  // スライダーのリファレンスを保持するための変数\n  const noseHeightInputRef = useRef(null);\n  const bodyHeightInputRef = useRef(null);\n  const bodyWidthInputRef = useRef(null);\n  const finHeightInputRef = useRef(null);\n  const finBaseWidthInputRef = useRef(null);\n  const finTipWidthInputRef = useRef(null);\n  const finThicknessInputRef = useRef(null);\n  const finSweepLengthInputRef = useRef(null);\n  const weightInputRef = useRef(null);\n  const centerOfGravityInputRef = useRef(null);\n  const launchAngleInputRef = useRef(null);\n  const windSpeedInputRef = useRef(null);\n\n  // スムーズなスライダー操作のためのdebounce関数\n  const debounce = func => {\n    // デバウンスを実質的に無効化して直接値を更新\n    return (...args) => {\n      func(...args);\n    };\n  };\n\n  // スライダー値の更新処理をよりダイレクトにするハンドラーを追加\n  const handleSliderChange = useCallback((ref, setter) => {\n    // マウスイベントの処理関数\n    const updateValueFromEvent = event => {\n      if (!ref.current) return;\n      const rect = ref.current.getBoundingClientRect();\n      const width = rect.width;\n      const left = rect.left;\n\n      // マウス位置をスライダー内の相対位置(0～1)に変換\n      let relativeX = (event.clientX - left) / width;\n      // 範囲外の場合はクランプ(0～1に制限)\n      relativeX = Math.max(0, Math.min(1, relativeX));\n\n      // スライダーの最小値と最大値\n      const min = Number(ref.current.min);\n      const max = Number(ref.current.max);\n      const step = Number(ref.current.step) || 1;\n\n      // 相対位置から実際の値を計算\n      let newValue = min + relativeX * (max - min);\n\n      // 設定されたstepに基づいて値を丸める\n      if (step !== 0) {\n        newValue = Math.round(newValue / step) * step;\n      }\n\n      // 念のため、最終値を最小値と最大値の範囲内に収める\n      newValue = Math.max(min, Math.min(max, newValue));\n\n      // 値を更新 - 常にNumberとして扱う\n      setter(Number(newValue));\n    };\n    return {\n      // 値変更イベント(標準のonChange) - 明示的にNumberに変換\n      onChange: e => setter(Number(e.target.value)),\n      // トラックのクリックイベント(スライダー上の任意の位置)\n      onClick: updateValueFromEvent,\n      // スライダーのドラッグ開始\n      onMouseDown: startEvent => {\n        // ドキュメント全体でのマウス移動を監視\n        const handleMouseMove = moveEvent => {\n          moveEvent.preventDefault();\n          updateValueFromEvent(moveEvent);\n        };\n\n        // マウスボタンを離したときの処理\n        const handleMouseUp = () => {\n          document.removeEventListener('mousemove', handleMouseMove);\n          document.removeEventListener('mouseup', handleMouseUp);\n        };\n\n        // 最初のクリック位置で値を更新\n        updateValueFromEvent(startEvent);\n\n        // ドキュメント全体にイベントリスナーを追加\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n      },\n      // タッチデバイス対応\n      onTouchStart: startEvent => {\n        if (!startEvent.touches[0]) return;\n        const handleTouchMove = moveEvent => {\n          if (!moveEvent.touches[0]) return;\n          moveEvent.preventDefault();\n          const touch = moveEvent.touches[0];\n          const mockEvent = {\n            clientX: touch.clientX,\n            clientY: touch.clientY\n          };\n          updateValueFromEvent(mockEvent);\n        };\n        const handleTouchEnd = () => {\n          document.removeEventListener('touchmove', handleTouchMove);\n          document.removeEventListener('touchend', handleTouchEnd);\n        };\n        const touch = startEvent.touches[0];\n        const mockEvent = {\n          clientX: touch.clientX,\n          clientY: touch.clientY\n        };\n        updateValueFromEvent(mockEvent);\n        document.addEventListener('touchmove', handleTouchMove, {\n          passive: false\n        });\n        document.addEventListener('touchend', handleTouchEnd);\n      }\n    };\n  }, []);\n\n  // Design display dimensions\n  const design = useMemo(() => ({\n    width: UI_CONFIG.designViewWidth,\n    height: UI_CONFIG.designViewHeight,\n    centerX: UI_CONFIG.designViewWidth / 2\n  }), []);\n  const analysis = useMemo(() => ({\n    width: UI_CONFIG.analysisViewWidth,\n    height: UI_CONFIG.analysisViewHeight,\n    centerX: UI_CONFIG.analysisViewWidth / 2\n  }), []);\n\n  // メートル単位からSVG座標への変換関数の修正版\n  const convertMetersToSvgX = useCallback(meters => {\n    return metersToSvgX(meters, trajectoryScale);\n  }, [trajectoryScale]);\n  const convertMetersToSvgY = useCallback(meters => {\n    return metersToSvgY(meters, trajectoryScale);\n  }, [trajectoryScale]);\n\n  // 実際のロケット寸法を計算するためのラッパー\n  const getRocketDimensions = useCallback(config => {\n    return getActualRocketDimensions(config, noseHeight, bodyHeight, finSweepLength, finTipWidth, finBaseWidth);\n  }, [noseHeight, bodyHeight, finSweepLength, finTipWidth, finBaseWidth]);\n\n  // 視覚化のための風速高度分布矢印ラッパー\n  const getWindArrows = useCallback((baseWindSpeed, profile) => {\n    return getWindProfileArrows(baseWindSpeed, profile, showWindArrows, convertMetersToSvgY, calculateWindSpeedAtHeight);\n  }, [showWindArrows, convertMetersToSvgY]);\n\n  // パラシュート描画関数のラッパー\n  const getParachute = useCallback((x, y, isOpen, deploymentProgress, rotation) => {\n    const rocketLength = mmToM(noseHeight + bodyHeight);\n    return getParachutePath(x, y, isOpen, deploymentProgress, rotation, rocketLength, selectedParachute, trajectoryScale);\n  }, [noseHeight, bodyHeight, selectedParachute, trajectoryScale]);\n  const getParachuteStrings = useCallback((x, y, isOpen, deploymentProgress, rotation) => {\n    const rocketLength = mmToM(noseHeight + bodyHeight);\n    return getParachuteStringPaths(x, y, isOpen, deploymentProgress, rotation, rocketLength, selectedParachute, trajectoryScale);\n  }, [noseHeight, bodyHeight, selectedParachute, trajectoryScale]);\n\n  // viewBox計算関数のラッパー\n  const computeDesignViewBox = useCallback(() => {\n    return getDesignViewBox(design, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth);\n  }, [design, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth]);\n  const computeAnalysisViewBox = useCallback(() => {\n    return getAnalysisViewBox(analysis, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth);\n  }, [analysis, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth]);\n\n  // 物理計算のための全パラメータをまとめる\n  const simulationParams = useMemo(() => ({\n    noseShape,\n    noseHeight,\n    bodyHeight,\n    bodyWidth,\n    finHeight,\n    finBaseWidth,\n    finTipWidth,\n    finThickness,\n    finSweepLength,\n    finMaterial,\n    weight,\n    centerOfGravity,\n    selectedMotor,\n    selectedParachute\n  }), [noseShape, noseHeight, bodyHeight, bodyWidth, finHeight, finBaseWidth, finTipWidth, finThickness, finSweepLength, finMaterial, weight, centerOfGravity, selectedMotor, selectedParachute]);\n\n  // 動的に計算結果を更新する\n  useEffect(() => {\n    // 投影面積、体積、圧力中心位置、空力中心位置を計算\n    const areas = calculateProjectedArea(simulationParams);\n    const volumeData = calculateVolume(simulationParams);\n    const cpData = calculateCenterOfPressure(simulationParams);\n    const acData = calculateAerodynamicCenter(simulationParams);\n    const stabilityCpData = calculateStabilityCenterOfPressure(simulationParams);\n    const margins = calculateStaticMargin(simulationParams);\n\n    // 状態を更新\n    setProjectedAreas(areas);\n    setVolumes(volumeData);\n    setPressureCenter(cpData);\n    setAerodynamicCenter(acData);\n    setStabilityCenterOfPressure(stabilityCpData);\n    setStaticMargins(margins);\n  }, [simulationParams]);\n\n  // 計算結果のキャッシュ\n  const calculations = useMemo(() => {\n    // 機体本体の高さ\n    const actualRocketHeight = noseHeight + bodyHeight;\n    // フィンの後端がボディ後端よりも出る場合の計算\n    const finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n    // 全長は機体長 + フィン後端部分\n    const totalHeight = actualRocketHeight + finExtension;\n\n    // 圧力中心位置と空力中心位置（新しい計算結果を使用）\n    const cp = (pressureCenter === null || pressureCenter === void 0 ? void 0 : pressureCenter.centerOfPressure) || totalHeight * 0.7;\n    const ac = (aerodynamicCenter === null || aerodynamicCenter === void 0 ? void 0 : aerodynamicCenter.aerodynamicCenter) || totalHeight * 0.65;\n    const stabilityCp = (stabilityCenterOfPressure === null || stabilityCenterOfPressure === void 0 ? void 0 : stabilityCenterOfPressure.stabilityCenterOfPressure) || totalHeight * 0.6;\n\n    // 姿勢安定性マージン - 重心位置との距離\n    const standardMargin = (staticMargins === null || staticMargins === void 0 ? void 0 : staticMargins.standardStaticMargin) || (cp - centerOfGravity) / bodyWidth;\n    const stabilityMargin = (staticMargins === null || staticMargins === void 0 ? void 0 : staticMargins.stabilityStaticMargin) || (stabilityCp - centerOfGravity) / bodyWidth;\n\n    // 新しい計算関数を使用してフィン限界速度を計算\n    const rocketParams = {\n      noseHeight,\n      bodyHeight,\n      bodyWidth,\n      finHeight,\n      finBaseWidth,\n      finTipWidth,\n      finThickness,\n      finSweepLength,\n      finMaterial,\n      centerOfGravity,\n      weight\n    };\n    const finDivergenceSpeed = calculateFinDivergenceSpeed(rocketParams);\n    const finFlutterSpeed = calculateFinFlutterSpeed(rocketParams);\n    return {\n      totalHeight: totalHeight,\n      actualRocketHeight: actualRocketHeight,\n      finExtension: finExtension,\n      aerodynamicCenter: Math.round(ac),\n      pressureCenter: Math.round(cp),\n      stabilityCenterOfPressure: Math.round(stabilityCp),\n      standardStaticMargin: standardMargin.toFixed(2),\n      stabilityStaticMargin: stabilityMargin.toFixed(2),\n      finDivergenceSpeed: Math.round(finDivergenceSpeed),\n      finFlutterSpeed: Math.round(finFlutterSpeed),\n      // フォーマット済みの値を追加\n      finDivergenceSpeedDisplay: formatSpeedValue(finDivergenceSpeed),\n      finFlutterSpeedDisplay: formatSpeedValue(finFlutterSpeed)\n    };\n  }, [noseHeight, bodyHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth, centerOfGravity, pressureCenter, aerodynamicCenter, stabilityCenterOfPressure, staticMargins, finHeight, finThickness, finMaterial, weight]);\n\n  // 現在の飛行フェーズを取得する関数\n  const getCurrentFlightPhase = useCallback(() => {\n    if (!isLaunched || !flightData || flightData.length === 0) {\n      return \"未発射\";\n    }\n\n    // プロパティの安全性を考慮して独自に計算\n    const timeIndex = Math.min(Math.floor(currentTime / 0.02), flightData.length - 1);\n    if (timeIndex < 0 || timeIndex >= flightData.length) {\n      return \"未発射\";\n    }\n    const currentData = flightData[timeIndex];\n    if (!currentData) {\n      return \"未発射\";\n    }\n    const position = {\n      isParachuteActive: currentData.isParachuteActive,\n      isParachuteEjected: currentData.isParachuteEjected\n    };\n    if (position.isParachuteActive) {\n      return \"パラシュート降下\";\n    } else if (position.isParachuteEjected) {\n      return \"パラシュート展開中\";\n    }\n\n    // 発射台からの距離を計算\n    const distanceFromStart = Math.sqrt(currentData.physicsX * currentData.physicsX + currentData.physicsY * currentData.physicsY);\n    const onLaunchRail = distanceFromStart < PHYSICAL_CONSTANTS.launchRailLength;\n    if (onLaunchRail) {\n      return \"発射台上\";\n    }\n\n    // エンジン推力が残っているか確認\n    const thrustEndTime = MOTOR_THRUST_DATA[selectedMotor].length * 0.02;\n    if (currentTime <= thrustEndTime) {\n      return \"推力飛行\";\n    }\n    return \"慣性飛行\";\n  }, [isLaunched, flightData, currentTime, selectedMotor]);\n\n  // 現在の位置情報を取得\n  const getCurrentPosition = useCallback(() => {\n    if (!isLaunched || !flightData || flightData.length === 0) {\n      // 初期状態・未発射状態\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n    const timeIndex = Math.min(Math.floor(currentTime / 0.02), flightData.length - 1);\n    if (timeIndex < 0 || timeIndex >= flightData.length) {\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n    const currentData = flightData[timeIndex];\n    if (!currentData) {\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n\n    // すべての数値にNaNチェックを追加\n    return {\n      physicsX: isNaN(currentData.physicsX) ? 0 : currentData.physicsX,\n      physicsY: isNaN(currentData.physicsY) ? 0 : currentData.physicsY,\n      rotation: isNaN(currentData.omega) ? launchAngle : currentData.omega * 180 / Math.PI,\n      isParachuteEjected: currentData.isParachuteEjected || false,\n      isParachuteActive: currentData.isParachuteActive || false,\n      parachuteDeploymentProgress: isNaN(currentData.parachuteDeploymentProgress) ? 0 : currentData.parachuteDeploymentProgress || 0,\n      torque: isNaN(currentData.torque) ? 0 : currentData.torque || 0,\n      angleChangePerDt2: isNaN(currentData.angleChangePerDt2) ? 0 : currentData.angleChangePerDt2 || 0,\n      horizontalDistance: isNaN(currentData.horizontalDistance) ? 0 : currentData.horizontalDistance || Math.abs(isNaN(currentData.physicsX) ? 0 : currentData.physicsX) || 0,\n      finDeflection: isNaN(currentData.finDeflection) ? 0 : currentData.finDeflection || 0,\n      effectiveWindSpeed: isNaN(currentData.effectiveWindSpeed) ? 0 : currentData.effectiveWindSpeed || 0\n    };\n  }, [isLaunched, flightData, currentTime, launchAngle]);\n\n  // モーターに応じた初期スケール値を取得する関数\n  const getInitialScaleForMotor = motorType => {\n    const baseScales = {\n      '1/2A6-2': 16,\n      // 強化された値\n      'A8-3': 12,\n      // 強化された値\n      'B6-4': 8 // 強化された値\n    };\n    return baseScales[motorType] || 12; // デフォルト値も強化\n  };\n\n  // モーターのパワー係数を取得する関数\n  const getMotorPowerFactor = motorType => {\n    const powerFactors = {\n      '1/2A6-2': 0.6,\n      // 調整された値\n      'A8-3': 0.5,\n      // 調整された値\n      'B6-4': 0.4 // 調整された値\n    };\n    return powerFactors[motorType] || 0.5; // デフォルト値も調整\n  };\n\n  // リセット関数を強化\n  const handleReset = useCallback(() => {\n    console.log('リセット処理開始');\n\n    // アニメーションをキャンセル\n    if (animationId) {\n      cancelAnimationFrame(animationId);\n      setAnimationId(null);\n    }\n\n    // 現在の結果を前回の結果として保存\n    if (flightResults) {\n      setLastFlightResults(flightResults);\n      setFlightResults(null);\n    }\n\n    // ポップアップを閉じる\n    setShowResultsPopup(false);\n\n    // すべての状態をリセット\n    setIsLaunched(false);\n    setFlightData([]);\n    setCurrentTime(0);\n    setCurrentHeight(0);\n    setCurrentSpeed(0);\n    setCurrentDistance(0);\n    setCurrentFinDeflection(0);\n    setCurrentMaxHeight(0);\n    setCurrentMaxSpeed(0);\n    setCurrentMaxDistance(0);\n    setCurrentMaxFinDeflection(0);\n\n    // 過去の飛行軌跡をクリア\n    setCompletedFlights([]);\n\n    // モーターに応じた適切なスケールを設定\n    const stableScale = getInitialScaleForMotor(selectedMotor);\n    setTrajectoryScale(stableScale);\n\n    // ロケットスケールも設定\n    const rocketScaleFactor = 0.03 * getMotorPowerFactor(selectedMotor);\n    setRocketScale(rocketScaleFactor);\n    console.log('シミュレーションが完全にリセットされました。新しいスケール: ', stableScale);\n  }, [animationId, flightResults, selectedMotor]);\n\n  // ポップアップを閉じる関数\n  const handleCloseResultsPopup = useCallback(() => {\n    setShowResultsPopup(false);\n    // 現在の結果を前回の結果として保存\n    if (flightResults) {\n      setLastFlightResults(flightResults);\n    }\n  }, [flightResults]);\n  const handleLaunch = useCallback(() => {\n    if (isLaunched) return;\n    try {\n      var _flight$data;\n      // 風速プロファイルを引数として渡す\n      const flight = calculateFlightPath(simulationParams, launchAngle, windSpeed, windProfile,\n      // 風速プロファイルを追加\n      SVG_CONFIG);\n      if (!(flight !== null && flight !== void 0 && (_flight$data = flight.data) !== null && _flight$data !== void 0 && _flight$data.length)) {\n        console.error('フライトデータが空です');\n        return;\n      }\n\n      // 初期データを取得（最初のフレーム用）\n      const initialData = flight.data[0];\n      console.log('初期フライトデータ：', initialData);\n      console.log(`最高到達高度: ${flight.maxHeight.toFixed(2)}m, 最高速度: ${flight.maxSpeed.toFixed(2)}m/s, 最大水平距離: ${flight.maxDistance.toFixed(2)}m`);\n      console.log(`最大フィンたわみ量: ${flight.maxFinDeflection.toFixed(4)}mm`);\n      console.log(`姿勢安定性: 最大角度変化量=${flight.angleStability.maxAngleChangePerDt2.toFixed(2)}°`);\n\n      // キーポイントを保存\n      setKeyPoints(flight.keyPoints);\n      setFlightData(flight.data);\n      setIsLaunched(true);\n      setCurrentTime(0);\n\n      // 初期値を明示的に設定\n      setCurrentHeight(initialData.height || 0);\n      setCurrentSpeed(initialData.vy || 0);\n      setCurrentDistance(initialData.horizontalDistance || 0);\n      setCurrentFinDeflection(initialData.finDeflection || 0);\n      setCurrentMaxHeight(initialData.height || 0);\n      setCurrentMaxSpeed(Math.abs(initialData.speedMagnitude) || 0);\n      setCurrentMaxDistance(0); // 最大水平距離の初期値\n      setCurrentMaxFinDeflection(0); // 最大フィンたわみ量の初期値\n\n      // アニメーション開始時間を記録\n      const startTime = performance.now();\n      let firstFrame = true;\n      const animate = timestamp => {\n        // 初回フレームの特別処理\n        if (firstFrame) {\n          firstFrame = false;\n          requestAnimationFrame(animate);\n          return;\n        }\n        try {\n          // アニメーション開始からの累積時間を計算（ANIMATION_SPEEDで調整）\n          const elapsed = Math.max(0, (timestamp - startTime) / 1000 * ANIMATION_SPEED);\n\n          // シミュレーションデータのインデックスを計算 - Math.maxを追加して負のインデックスを防止\n          const timeIndex = Math.max(0, Math.min(Math.floor(elapsed / 0.02), flight.data.length - 1));\n\n          // 追加のデバッグログ - 100フレームごとに状態を記録\n          if (timeIndex % 100 === 0) {\n            console.log(`Animation frame: time=${elapsed.toFixed(2)}s, index=${timeIndex}, total=${flight.data.length}`);\n          }\n\n          // データの安全性チェック\n          if (timeIndex >= 0 && timeIndex < flight.data.length) {\n            const currentData = flight.data[timeIndex];\n            if (currentData && typeof currentData === 'object') {\n              // NaNチェックを追加\n              setCurrentTime(elapsed);\n              setCurrentHeight(isNaN(currentData.height) ? 0 : currentData.height || 0);\n              setCurrentSpeed(isNaN(currentData.vy) ? 0 : currentData.vy || 0);\n              setCurrentDistance(isNaN(currentData.horizontalDistance) ? 0 : currentData.horizontalDistance || Math.abs(isNaN(currentData.physicsX) ? 0 : currentData.physicsX) || 0);\n\n              // フィンたわみ量のNaNチェック\n              const finDeflection = isNaN(currentData.finDeflection) ? 0 : currentData.finDeflection || 0;\n              setCurrentFinDeflection(finDeflection);\n\n              // 最大値の安全な更新\n              setCurrentMaxHeight(prev => Math.max(prev, isNaN(currentData.height) ? 0 : currentData.height || 0));\n              setCurrentMaxSpeed(prev => Math.max(prev, isNaN(currentData.speedMagnitude) ? 0 : Math.abs(currentData.speedMagnitude) || 0));\n              setCurrentMaxDistance(prev => Math.max(prev, isNaN(currentData.physicsX) ? 0 : Math.abs(currentData.physicsX) || 0));\n\n              // 最大フィンたわみ量の更新\n              setCurrentMaxFinDeflection(prev => Math.max(prev, finDeflection));\n\n              // アニメーションをデータの最後まで続けるようにする\n              if (timeIndex < flight.data.length - 1) {\n                const id = requestAnimationFrame(animate);\n                setAnimationId(id);\n              } else {\n                // アニメーション終了 - 最終フレームに到達した時だけ結果を表示\n                console.log('アニメーション完了: 最終インデックス到達');\n\n                // シミュレーションデータから最大値を直接計算（状態変数に依存せず確実に取得）\n                const maxHeight = Math.max(...flight.data.map(d => isNaN(d.height) ? 0 : d.height || 0));\n                const maxSpeed = Math.max(...flight.data.map(d => isNaN(d.speedMagnitude) ? 0 : Math.abs(d.speedMagnitude) || 0));\n                const maxDistance = Math.max(...flight.data.map(d => isNaN(d.physicsX) ? 0 : Math.abs(d.physicsX) || 0));\n                const maxFinDeflection = Math.max(...flight.data.map(d => isNaN(d.finDeflection) ? 0 : d.finDeflection || 0));\n\n                // 飛行結果の評価（直接計算した最大値を使用）\n                const isDivergenceOK = maxSpeed < flight.calculations.finDivergenceSpeed;\n                const isFlutterOK = maxSpeed < flight.calculations.finFlutterSpeed;\n                const maxDeflectionPercent = maxFinDeflection / finHeight * 100;\n                const isDeflectionOK = maxDeflectionPercent <= 3;\n\n                // 姿勢安定性の判定結果 - 最大角度偏差を使用しない\n                const isAngleStableOK = flight.angleStability.isAngleStableOK;\n                const maxAngleChangePerDt2 = flight.angleStability.maxAngleChangePerDt2;\n\n                // 総合判定は全てのチェックをパスする必要がある\n                const isOverallOK = isDivergenceOK && isFlutterOK && isDeflectionOK && isAngleStableOK;\n\n                // 結果オブジェクトの作成\n                const results = {\n                  maxSpeed: maxSpeed,\n                  maxHeight: maxHeight,\n                  maxDistance: maxDistance,\n                  maxFinDeflection: maxFinDeflection,\n                  finHeight: finHeight,\n                  maxDeflectionPercent: maxDeflectionPercent,\n                  divergenceSpeed: formatSpeedValue(flight.calculations.finDivergenceSpeed),\n                  flutterSpeed: formatSpeedValue(flight.calculations.finFlutterSpeed),\n                  isDivergenceOK,\n                  isFlutterOK,\n                  isDeflectionOK,\n                  isAngleStableOK,\n                  maxAngleChangePerDt2,\n                  isOverallOK,\n                  launchAngle,\n                  windSpeed,\n                  windProfile\n                };\n\n                // 状態更新を一度に行う\n                setFlightResults(results);\n                setShowResultsPopup(true);\n\n                // UI上の最大値表示も更新\n                setCurrentMaxHeight(maxHeight);\n                setCurrentMaxSpeed(maxSpeed);\n                setCurrentMaxDistance(maxDistance);\n                setCurrentMaxFinDeflection(maxFinDeflection);\n                const completedFlightData = {\n                  data: [...flight.data],\n                  launchAngle,\n                  windSpeed,\n                  windProfile,\n                  maxHeight: maxHeight,\n                  maxSpeed: maxSpeed,\n                  maxDistance: maxDistance,\n                  maxFinDeflection: maxFinDeflection,\n                  scale: trajectoryScale,\n                  results: results // 結果も保存\n                };\n                setCompletedFlights(prevFlights => [...prevFlights, completedFlightData]);\n                setIsLaunched(false);\n              }\n            }\n          }\n        } catch (error) {\n          // エラーが発生した場合は記録して次のフレームを試行\n          console.error('Animation frame error:', error);\n\n          // 重大なエラーでなければ次のフレームを継続\n          if (timeIndex < flight.data.length - 1) {\n            const id = requestAnimationFrame(animate);\n            setAnimationId(id);\n          } else {\n            // エラー発生時も最終フレームに達していれば終了処理\n            handleReset();\n          }\n        }\n      };\n\n      // アニメーション開始\n      requestAnimationFrame(animate);\n    } catch (error) {\n      console.error('Launch error:', error);\n      handleReset();\n    }\n  }, [isLaunched, launchAngle, windSpeed, windProfile, simulationParams, handleReset, finHeight, trajectoryScale, ANIMATION_SPEED]);\n\n  // パラメータ変更時のスケール更新\n  useEffect(() => {\n    if (isLaunched) return;\n\n    // 風速プロファイルを引数として渡す\n    const flight = calculateFlightPath(simulationParams, launchAngle, windSpeed, windProfile,\n    // 風速プロファイルを追加\n    SVG_CONFIG);\n    if (flight && flight.maxHeight > 0) {\n      const availableHeight = SVG_CONFIG.height - SVG_CONFIG.groundLevel;\n\n      // 改良：より高いベース高さを設定\n      const baseHeights = {\n        '1/2A6-2': 100,\n        'A8-3': 150,\n        'B6-4': 200\n      };\n      const expectedBaseHeight = baseHeights[simulationParams.selectedMotor] || 150;\n      const targetHeight = Math.max(flight.maxHeight * 1.3, expectedBaseHeight);\n      const minHorizontalDistance = expectedBaseHeight * 0.9;\n      const maxDistance = Math.max(flight.maxDistance || 0, minHorizontalDistance);\n\n      // スケール計算\n      const verticalScale = availableHeight / targetHeight;\n      const horizontalScale = SVG_CONFIG.width * 0.9 / (maxDistance * 2 || 1);\n      const motorPowerFactor = {\n        '1/2A6-2': 0.45,\n        'A8-3': 0.35,\n        'B6-4': 0.25\n      };\n      const powerFactor = motorPowerFactor[simulationParams.selectedMotor] || 0.35;\n\n      // 最小/最大スケール値の調整\n      const minScale = 10;\n      const maxScale = 24;\n      const rawScale = Math.min(verticalScale, horizontalScale) * powerFactor;\n      // 最終スケールを調整 - 必ず最小スケールを適用\n      const finalScale = Math.max(minScale, Math.min(maxScale, rawScale));\n\n      // スケール設定\n      setTrajectoryScale(finalScale);\n\n      // ロケットスケールをさらに小さく\n      const baseRocketScale = 0.03;\n      setRocketScale(baseRocketScale * powerFactor);\n      console.log(`パラメータ更新: モーター=${simulationParams.selectedMotor}, 高度=${flight.maxHeight.toFixed(1)}m, スケール=${finalScale.toFixed(2)}`);\n    }\n  }, [isLaunched, launchAngle, windSpeed, windProfile, simulationParams]);\n\n  // 初期表示時の強制スケール設定用のuseEffect追加\n  useEffect(() => {\n    // コンポーネント初期マウント時に強制的にスケールを設定\n    const initialScale = getInitialScaleForMotor(selectedMotor);\n    const initialRocketScale = 0.03 * getMotorPowerFactor(selectedMotor);\n    setTrajectoryScale(initialScale);\n    setRocketScale(initialRocketScale);\n    console.log(`初期表示: スケール=${initialScale}, ロケットスケール=${initialRocketScale}`);\n  }, []); // 空の依存配列で初回のみ実行\n\n  // クリーンアップ\n  useEffect(() => {\n    return () => {\n      if (animationId) {\n        cancelAnimationFrame(animationId);\n      }\n      if (sliderTimeoutRef.current) {\n        clearTimeout(sliderTimeoutRef.current);\n      }\n    };\n  }, [animationId]);\n\n  // 本フックから公開する関数とパラメータ\n  return {\n    // デザインパラメータ\n    noseShape,\n    setNoseShape: setNoseShapeAndUpdate,\n    noseHeight,\n    setNoseHeight: debounce(setNoseHeight, SLIDER_DEBOUNCE_TIME),\n    bodyHeight,\n    setBodyHeight: debounce(setBodyHeight, SLIDER_DEBOUNCE_TIME),\n    bodyWidth,\n    setBodyWidth: debounce(setBodyWidth, SLIDER_DEBOUNCE_TIME),\n    finHeight,\n    setFinHeight: debounce(setFinHeight, SLIDER_DEBOUNCE_TIME),\n    finBaseWidth,\n    setFinBaseWidth: debounce(setFinBaseWidth, SLIDER_DEBOUNCE_TIME),\n    finTipWidth,\n    setFinTipWidth: debounce(setFinTipWidth, SLIDER_DEBOUNCE_TIME),\n    finThickness,\n    setFinThickness: debounce(setFinThickness, SLIDER_DEBOUNCE_TIME),\n    finSweepLength,\n    setFinSweepLength: debounce(setFinSweepLength, SLIDER_DEBOUNCE_TIME),\n    finMaterial,\n    setFinMaterial,\n    finCount,\n    setFinCount,\n    // 分析パラメータ\n    weight,\n    setWeight: debounce(setWeight, SLIDER_DEBOUNCE_TIME),\n    centerOfGravity,\n    setCenterOfGravity: debounce(setCenterOfGravity, SLIDER_DEBOUNCE_TIME),\n    selectedMotor,\n    setSelectedMotor,\n    selectedParachute,\n    setSelectedParachute,\n    // シミュレーションパラメータ\n    launchAngle,\n    setLaunchAngle: debounce(setLaunchAngle, SLIDER_DEBOUNCE_TIME),\n    windSpeed,\n    setWindSpeed: debounce(setWindSpeed, SLIDER_DEBOUNCE_TIME),\n    windProfile,\n    setWindProfile,\n    showWindArrows,\n    setShowWindArrows,\n    // シミュレーション状態\n    isLaunched,\n    setIsLaunched,\n    flightData,\n    currentTime,\n    currentHeight,\n    currentSpeed,\n    currentDistance,\n    currentFinDeflection,\n    currentMaxHeight,\n    currentMaxSpeed,\n    currentMaxDistance,\n    currentMaxFinDeflection,\n    completedFlights,\n    keyPoints,\n    // 表示設定\n    design,\n    analysis,\n    trajectoryScale,\n    rocketScale,\n    // 新しい計算結果\n    projectedAreas,\n    volumes,\n    pressureCenter,\n    aerodynamicCenter,\n    stabilityCenterOfPressure,\n    staticMargins,\n    // 計算結果\n    calculations,\n    // スライダーのデータと更新関数\n    noseHeightInputRef,\n    handleNoseHeight: handleSliderChange(noseHeightInputRef, setNoseHeight),\n    bodyHeightInputRef,\n    handleBodyHeight: handleSliderChange(bodyHeightInputRef, setBodyHeight),\n    bodyWidthInputRef,\n    handleBodyWidth: handleSliderChange(bodyWidthInputRef, setBodyWidth),\n    finHeightInputRef,\n    handleFinHeight: handleSliderChange(finHeightInputRef, setFinHeight),\n    finBaseWidthInputRef,\n    handleFinBaseWidth: handleSliderChange(finBaseWidthInputRef, setFinBaseWidth),\n    finTipWidthInputRef,\n    handleFinTipWidth: handleSliderChange(finTipWidthInputRef, setFinTipWidth),\n    finThicknessInputRef,\n    handleFinThickness: handleSliderChange(finThicknessInputRef, setFinThickness),\n    finSweepLengthInputRef,\n    handleFinSweepLength: handleSliderChange(finSweepLengthInputRef, setFinSweepLength),\n    weightInputRef,\n    handleWeight: handleSliderChange(weightInputRef, setWeight),\n    centerOfGravityInputRef,\n    handleCenterOfGravity: handleSliderChange(centerOfGravityInputRef, setCenterOfGravity),\n    launchAngleInputRef,\n    handleLaunchAngle: handleSliderChange(launchAngleInputRef, setLaunchAngle),\n    windSpeedInputRef,\n    handleWindSpeed: handleSliderChange(windSpeedInputRef, setWindSpeed),\n    // 描画関数 - 外部のレンダリング関数を呼び出すためのラッパー\n    getNosePath: config => getNosePath(config, noseShape, noseHeight, bodyWidth, bodyHeight),\n    getBodyPath: config => getBodyPath(config, bodyHeight, bodyWidth),\n    getLeftFinPath: config => getLeftFinPath(config, bodyWidth, finHeight, finBaseWidth, finSweepLength, finTipWidth),\n    getRightFinPath: config => getRightFinPath(config, bodyWidth, finHeight, finBaseWidth, finSweepLength, finTipWidth),\n    getCenterFinsPath: config => getCenterFinsPath(config, finThickness, finBaseWidth, finSweepLength, finTipWidth),\n    getParachutePath: getParachute,\n    getParachuteStringPaths: getParachuteStrings,\n    getWindArrow,\n    getWindProfileArrows: getWindArrows,\n    // 座標変換\n    metersToSvgX: convertMetersToSvgX,\n    metersToSvgY: convertMetersToSvgY,\n    // viewBox計算\n    getDesignViewBox: computeDesignViewBox,\n    getAnalysisViewBox: computeAnalysisViewBox,\n    // ユーティリティ関数\n    getActualRocketDimensions: getRocketDimensions,\n    getCurrentPosition,\n    calculateWindSpeedAtHeight,\n    formatFinDeflection,\n    getSafeValue,\n    // 操作関数\n    handleLaunch,\n    handleReset,\n    // 結果表示関連\n    showResultsPopup,\n    flightResults,\n    lastFlightResults,\n    getCurrentFlightPhase,\n    handleCloseResultsPopup\n  };\n};\n\n// シミュレーションタブコンポーネント\n_s(useRocketSimulator, \"ZNBFqUaueOj3Al6S/jiezaWCIEc=\");\nconst SimulationTab = ({\n  rocketSim,\n  debugView,\n  setDebugView\n}) => {\n  const position = rocketSim.getCurrentPosition();\n  const windArrow = rocketSim.getWindArrow(rocketSim.windSpeed);\n\n  // ロケットパラメータを表示用にスケーリング\n  const rocketDisplayParams = {\n    bodyWidth: rocketSim.bodyWidth * rocketSim.rocketScale,\n    bodyHeight: rocketSim.bodyHeight * rocketSim.rocketScale,\n    noseHeight: rocketSim.noseHeight * rocketSim.rocketScale,\n    finHeight: rocketSim.finHeight * rocketSim.rocketScale,\n    finBaseWidth: rocketSim.finBaseWidth * rocketSim.rocketScale,\n    finTipWidth: rocketSim.finTipWidth * rocketSim.rocketScale,\n    finThickness: rocketSim.finThickness * rocketSim.rocketScale,\n    finSweepLength: rocketSim.finSweepLength * rocketSim.rocketScale\n  };\n\n  // 姿勢表示用のロケットスケールを自動計算\n  // 円の表示エリアの大きさに基づいて計算\n  const circleRadius = 90; // 円の有効半径（余白含む）\n  const {\n    totalHeight\n  } = rocketSim.getActualRocketDimensions({\n    height: 100,\n    centerX: 50\n  });\n\n  // 円の半径を基準にスケールを計算\n  // ロケットの全長が円の直径の約80%になるようにする\n  const attitudeDisplayScale = circleRadius * 1.6 / totalHeight;\n\n  // 姿勢表示用のロケットパラメータ\n  const attitudeRocketParams = {\n    bodyWidth: rocketSim.bodyWidth * attitudeDisplayScale,\n    bodyHeight: rocketSim.bodyHeight * attitudeDisplayScale,\n    noseHeight: rocketSim.noseHeight * attitudeDisplayScale,\n    finHeight: rocketSim.finHeight * attitudeDisplayScale,\n    finBaseWidth: rocketSim.finBaseWidth * attitudeDisplayScale,\n    finTipWidth: rocketSim.finTipWidth * attitudeDisplayScale,\n    finThickness: rocketSim.finThickness * attitudeDisplayScale,\n    finSweepLength: rocketSim.finSweepLength * attitudeDisplayScale\n  };\n\n  // 重心位置の計算（スケールに合わせて）\n  const cogY = rocketSim.centerOfGravity * attitudeDisplayScale;\n\n  // 重心位置に基づいて回転中心を計算\n  // 重心位置はノーズ先端からの距離なので、本体高さから重心位置を引くことで底部からの距離を計算\n  const cogToBottom = attitudeRocketParams.bodyHeight + attitudeRocketParams.noseHeight - cogY;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"\\u98DB\\u884C\\u30B7\\u30DF\\u30E5\\u30EC\\u30FC\\u30B7\\u30E7\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-6 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"\\u767A\\u5C04\\u89D2\\u5EA6 (\\u5EA6)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: rocketSim.launchAngleInputRef,\n              type: \"range\",\n              value: rocketSim.launchAngle,\n              min: \"-30\",\n              max: \"30\",\n              step: \"1\",\n              disabled: rocketSim.isLaunched,\n              ...rocketSim.handleLaunchAngle,\n              className: \"w-full cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-30\\xB0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [rocketSim.launchAngle, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"30\\xB0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"\\u6A2A\\u98A8\\u901F\\u5EA6 (m/s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: rocketSim.windSpeedInputRef,\n              type: \"range\",\n              value: rocketSim.windSpeed,\n              min: \"-8\",\n              max: \"8\",\n              step: \"0.1\",\n              disabled: rocketSim.isLaunched,\n              ...rocketSim.handleWindSpeed,\n              className: \"w-full cursor-pointer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"-8 m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [rocketSim.windSpeed.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"8 m/s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"\\u98A8\\u901F\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30EB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                value: rocketSim.windProfile,\n                onChange: e => rocketSim.setWindProfile(e.target.value),\n                disabled: rocketSim.isLaunched,\n                className: \"p-2 border border-gray-300 rounded w-48\",\n                children: Object.entries(WIND_PROFILES).map(([key, profile]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: key,\n                  children: profile.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"showWindArrows\",\n                  checked: rocketSim.showWindArrows,\n                  onChange: e => rocketSim.setShowWindArrows(e.target.checked),\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"showWindArrows\",\n                  children: \"\\u98A8\\u901F\\u5206\\u5E03\\u8868\\u793A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u9AD8\\u5EA6\\u304C\\u4E0A\\u304C\\u308B\\u306B\\u3064\\u308C\\u3066\\u98A8\\u901F\\u304C\\u5F37\\u304F\\u306A\\u308A\\u307E\\u3059\\u3002\\u5730\\u5F62\\u306B\\u3088\\u3063\\u3066\\u5909\\u5316\\u7387\\u304C\\u7570\\u306A\\u308A\\u307E\\u3059\\u3002\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 17\n              }, this), rocketSim.windProfile !== 'uniform' && rocketSim.windSpeed !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"\\u73FE\\u5728\\u306E\\u8A2D\\u5B9A:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 21\n                }, this), \" \\u5730\\u4E0A\\u98A8\\u901F \", rocketSim.windSpeed.toFixed(1), \" m/s\\u3001 \\u9AD8\\u5EA680m\\u3067\\u306F\\u7D04 \", rocketSim.calculateWindSpeedAtHeight(rocketSim.windSpeed, 80, rocketSim.windProfile).toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u73FE\\u5728\\u6642\\u523B: \", rocketSim.currentTime.toFixed(2), \" s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u73FE\\u5728\\u9AD8\\u5EA6: \", rocketSim.currentHeight.toFixed(1), \" m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u73FE\\u5728\\u901F\\u5EA6: \", rocketSim.currentSpeed.toFixed(1), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u73FE\\u5728\\u6C34\\u5E73\\u8DDD\\u96E2: \", rocketSim.currentDistance.toFixed(1), \" m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u30D5\\u30A3\\u30F3\\u305F\\u308F\\u307F\\u91CF: \", rocketSim.formatFinDeflection(rocketSim.currentFinDeflection)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 15\n            }, this), position.effectiveWindSpeed && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u73FE\\u5728\\u5B9F\\u52B9\\u98A8\\u901F: \", position.effectiveWindSpeed.toFixed(1), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1086,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1079,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6700\\u9AD8\\u5230\\u9054\\u9AD8\\u5EA6: \", rocketSim.currentMaxHeight.toFixed(1), \" m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1090,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6700\\u9AD8\\u901F\\u5EA6: \", rocketSim.currentMaxSpeed.toFixed(1), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6700\\u5927\\u6C34\\u5E73\\u8DDD\\u96E2: \", rocketSim.currentMaxDistance.toFixed(1), \" m\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u6700\\u5927\\u30D5\\u30A3\\u30F3\\u305F\\u308F\\u307F\\u91CF: \", rocketSim.currentMaxFinDeflection.toFixed(2), \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rocketSim.handleLaunch,\n            disabled: rocketSim.isLaunched,\n            className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50\",\n            children: \"\\u767A\\u5C04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rocketSim.handleReset,\n            className: \"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\",\n            children: \"\\u30EA\\u30BB\\u30C3\\u30C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDebugView(!debugView),\n            className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: debugView ? \"通常表示\" : \"デバッグ表示\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 13\n          }, this), rocketSim.completedFlights.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600 ml-2 italic\",\n            children: [rocketSim.completedFlights.length, \"\\u56DE\\u306E\\u8ECC\\u8DE1\\u3092\\u8868\\u793A\\u4E2D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full bg-white rounded-lg border\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"100%\",\n            height: 600,\n            viewBox: `0 0 800 600`,\n            style: {\n              background: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [Array.from({\n                length: 10\n              }).map((_, i) => {\n                const heightMeters = i * 10; // 10mごとに線を引く\n                const y = rocketSim.metersToSvgY(heightMeters);\n                if (y >= 0 && y <= 550) {\n                  return /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: 0,\n                      y1: y,\n                      x2: 800,\n                      y2: y,\n                      stroke: \"#ddd\",\n                      strokeWidth: \"1\",\n                      strokeDasharray: \"5,5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1147,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                      x: 5,\n                      y: y - 5,\n                      fontSize: \"12\",\n                      fill: \"#666\",\n                      children: [heightMeters, \"m\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1156,\n                      columnNumber: 25\n                    }, this)]\n                  }, `grid-h-${i}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1146,\n                    columnNumber: 23\n                  }, this);\n                }\n                return null;\n              }), Array.from({\n                length: 11\n              }).map((_, i) => {\n                const distanceMeters = (i - 5) * 10; // -50mから+50mまで\n                const x = rocketSim.metersToSvgX(distanceMeters);\n                if (x >= 0 && x <= 800) {\n                  return /*#__PURE__*/_jsxDEV(\"g\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: x,\n                      y1: 0,\n                      x2: x,\n                      y2: 600,\n                      stroke: \"#ddd\",\n                      strokeWidth: \"1\",\n                      strokeDasharray: \"5,5\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1173,\n                      columnNumber: 25\n                    }, this), distanceMeters !== 0 && /*#__PURE__*/_jsxDEV(\"text\", {\n                      x: x + 5,\n                      y: 550 + 15,\n                      fontSize: \"12\",\n                      fill: \"#666\",\n                      children: [distanceMeters, \"m\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1183,\n                      columnNumber: 27\n                    }, this)]\n                  }, `grid-v-${i}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1172,\n                    columnNumber: 23\n                  }, this);\n                }\n                return null;\n              })]\n            }, void 0, true), (debugView || rocketSim.windSpeed !== 0) && /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: 20,\n                y: 30,\n                fontSize: \"16\",\n                fill: rocketSim.windSpeed === 0 ? \"#999\" : \"#333\",\n                fontWeight: Math.abs(rocketSim.windSpeed) > 2 ? \"bold\" : \"normal\",\n                children: [\"\\u98A8\\u901F: \", rocketSim.windSpeed.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 19\n              }, this), rocketSim.windSpeed !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n                children: (() => {\n                  const windArrow = rocketSim.getWindArrow(rocketSim.windSpeed);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: windArrow.line,\n                      stroke: windArrow.color,\n                      strokeWidth: windArrow.strokeWidth,\n                      fill: \"none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1216,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: windArrow.head,\n                      stroke: windArrow.color,\n                      strokeWidth: windArrow.strokeWidth,\n                      fill: \"none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1223,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true);\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 17\n            }, this), rocketSim.showWindArrows && rocketSim.windSpeed !== 0 && /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                x: 30,\n                y: 100,\n                fontSize: \"12\",\n                fill: \"#666\",\n                fontWeight: \"bold\",\n                children: \"\\u9AD8\\u5EA6\\u5225\\u98A8\\u901F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 19\n              }, this), rocketSim.getWindProfileArrows(rocketSim.windSpeed, rocketSim.windProfile).map((arrow, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n                children: [/*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 30,\n                  y: arrow.y - 15,\n                  fontSize: \"10\",\n                  fill: \"#666\",\n                  children: [arrow.height, \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: arrow.arrowPath.line,\n                  stroke: arrow.arrowPath.color,\n                  strokeWidth: arrow.arrowPath.strokeWidth,\n                  fill: \"none\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: arrow.arrowPath.head,\n                  stroke: arrow.arrowPath.color,\n                  strokeWidth: arrow.arrowPath.strokeWidth,\n                  fill: \"none\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: arrow.arrowPath.textX,\n                  y: arrow.arrowPath.textY + 4,\n                  fontSize: \"10\",\n                  fill: \"#666\",\n                  children: [arrow.windSpeed.toFixed(1), \" m/s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1261,\n                  columnNumber: 23\n                }, this)]\n              }, `wind-arrow-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1245,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: 0,\n              y: 550,\n              width: 800,\n              height: 50,\n              fill: \"#4b5563\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n              transform: `rotate(${rocketSim.launchAngle} 400 550)`,\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: 380,\n                y1: 550,\n                x2: 420,\n                y2: 550,\n                stroke: \"#374151\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: 400,\n                y1: 550,\n                x2: 400,\n                y2: 550 - 0.65 * rocketSim.trajectoryScale,\n                stroke: \"#374151\",\n                strokeWidth: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1279,\n              columnNumber: 15\n            }, this), rocketSim.completedFlights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M 400 550 ` + flight.data.filter((d, i) => i % 2 === 0) // データ間引きをさらに減らす\n              .map(d => {\n                const x = 400 + d.physicsX * flight.scale;\n                const y = 550 - d.physicsY * flight.scale;\n                return `L ${x} ${y}`;\n              }).join(' '),\n              stroke: \"rgba(107, 114, 128, 0.5)\",\n              strokeWidth: \"1.5\",\n              fill: \"none\",\n              strokeDasharray: \"2 2\"\n            }, `completed-flight-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1300,\n              columnNumber: 17\n            }, this)), rocketSim.isLaunched && rocketSim.flightData.length > 0 && /*#__PURE__*/_jsxDEV(\"path\", {\n              d: `M 400 550 ` + rocketSim.flightData.filter((d, i) => i <= Math.floor(rocketSim.currentTime / 0.02) && i % 2 === 0).map(d => {\n                // NaNチェックを追加\n                const x = isNaN(d.physicsX) ? 400 : 400 + d.physicsX * rocketSim.trajectoryScale;\n                const y = isNaN(d.physicsY) ? 550 : 550 - d.physicsY * rocketSim.trajectoryScale;\n                return `L ${x} ${y}`;\n              }).join(' '),\n              stroke: \"#2563eb\",\n              strokeWidth: \"2.5\",\n              fill: \"none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/4 bg-white rounded-lg border p-4 flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold mb-2\",\n            children: \"\\u30ED\\u30B1\\u30C3\\u30C8\\u59FF\\u52E2\\u8868\\u793A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: 200,\n              height: 200,\n              viewBox: \"-100 -100 200 200\",\n              className: \"border-2 border-gray-300 rounded-full overflow-hidden bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"0\",\n                cy: \"0\",\n                r: \"98\",\n                fill: \"#f0f0f0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1352,\n                columnNumber: 17\n              }, this), [...Array(12)].map((_, i) => {\n                const angle = i * 30;\n                const radians = (angle - 90) * Math.PI / 180;\n                const x1 = Math.cos(radians) * 80;\n                const y1 = Math.sin(radians) * 80;\n                const x2 = Math.cos(radians) * 90;\n                const y2 = Math.sin(radians) * 90;\n                return /*#__PURE__*/_jsxDEV(\"g\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2,\n                    stroke: \"#999\",\n                    strokeWidth: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1365,\n                    columnNumber: 23\n                  }, this), i % 3 === 0 && /*#__PURE__*/_jsxDEV(\"text\", {\n                    x: Math.cos(radians) * 70,\n                    y: Math.sin(radians) * 70,\n                    textAnchor: \"middle\",\n                    dominantBaseline: \"middle\",\n                    fontSize: \"10\",\n                    fill: \"#666\",\n                    children: [angle, \"\\xB0\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1374,\n                    columnNumber: 25\n                  }, this)]\n                }, `mark-${i}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"-90\",\n                y1: \"0\",\n                x2: \"90\",\n                y2: \"0\",\n                stroke: \"#666\",\n                strokeWidth: \"1\",\n                strokeDasharray: \"3,2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"0\",\n                y1: \"-90\",\n                x2: \"0\",\n                y2: \"90\",\n                stroke: \"#666\",\n                strokeWidth: \"1\",\n                strokeDasharray: \"3,2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1391,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n                transform: `rotate(${isNaN(position.rotation) ? 0 : position.rotation})`,\n                children: /*#__PURE__*/_jsxDEV(\"g\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: getBodyPath(0, cogToBottom, attitudeRocketParams),\n                    fill: \"#9CA3AF\",\n                    stroke: \"#374151\",\n                    strokeWidth: \"0.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1398,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: rocketSim.getCenterFinsPath(0, cogToBottom, attitudeRocketParams),\n                    fill: \"#6B7280\",\n                    stroke: \"#374151\",\n                    strokeWidth: \"0.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: getLeftFinPath(0, cogToBottom, attitudeRocketParams),\n                    fill: \"#6B7280\",\n                    stroke: \"#374151\",\n                    strokeWidth: \"0.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1412,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: getRightFinPath(0, cogToBottom, attitudeRocketParams),\n                    fill: \"#6B7280\",\n                    stroke: \"#374151\",\n                    strokeWidth: \"0.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1418,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: getNosePath(0, cogToBottom, attitudeRocketParams),\n                    fill: \"#D1D5DB\",\n                    stroke: \"#374151\",\n                    strokeWidth: \"0.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1426,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                    cx: \"0\",\n                    cy: \"0\",\n                    r: \"2\",\n                    fill: \"red\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1434,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1396,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                x: \"0\",\n                y: \"-85\",\n                textAnchor: \"middle\",\n                fontSize: \"12\",\n                fill: \"#333\",\n                fontWeight: \"bold\",\n                children: [(position.rotation % 360).toFixed(1), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1439,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 gap-x-2 gap-y-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: \"\\u98DB\\u884C\\u30D5\\u30A7\\u30FC\\u30BA:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rocketSim.getCurrentFlightPhase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: \"\\u767A\\u5C04\\u89D2\\u5EA6:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [rocketSim.launchAngle, \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: \"\\u73FE\\u5728\\u89D2\\u5EA6:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [(position.rotation % 360).toFixed(1), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: \"\\u89D2\\u5EA6\\u5909\\u5316:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [(position.rotation - rocketSim.launchAngle).toFixed(1), \"\\xB0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: \"\\u98A8\\u5411\\u304D:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: rocketSim.windSpeed > 0 ? \"右\" : rocketSim.windSpeed < 0 ? \"左\" : \"なし\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1454,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 13\n          }, this), rocketSim.lastFlightResults && /*#__PURE__*/_jsxDEV(LastFlightResults, {\n            results: rocketSim.lastFlightResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1340,\n          columnNumber: 11\n        }, this), debugView && /*#__PURE__*/_jsxDEV(WindAngleLimitVisualizer, {\n          position: position,\n          windSpeed: rocketSim.windSpeed,\n          currentFlightPhase: rocketSim.getCurrentFlightPhase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-sm mt-4 p-4 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mb-2\",\n          children: \"\\u4F7F\\u7528\\u30D1\\u30E9\\u30E1\\u30FC\\u30BF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u91CD\\u91CF: \", rocketSim.weight, \" g\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1492,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30E2\\u30FC\\u30BF\\u30FC: \", rocketSim.selectedMotor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30D1\\u30E9\\u30B7\\u30E5\\u30FC\\u30C8: \", rocketSim.selectedParachute]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30CE\\u30FC\\u30BA\\u5F62\\u72B6: \", NOSE_SHAPES[rocketSim.noseShape].name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u6297\\u529B\\u4FC2\\u6570: \", NOSE_SHAPES[rocketSim.noseShape].cd.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc pl-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30ED\\u30B1\\u30C3\\u30C8\\u5168\\u9577: \", rocketSim.calculations.totalHeight, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30DC\\u30C7\\u30A3\\u76F4\\u5F84: \", rocketSim.bodyWidth, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30D5\\u30A3\\u30F3\\u7FFC\\u5E45: \", rocketSim.finHeight, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30D5\\u30A3\\u30F3\\u539A\\u307F: \", rocketSim.finThickness.toFixed(1), \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u30D5\\u30A3\\u30F3\\u6750\\u8CEA: \", FIN_MATERIALS[rocketSim.finMaterial].name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1503,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u91CD\\u5FC3\\u4F4D\\u7F6E: \", rocketSim.centerOfGravity, \" mm\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u98A8\\u901F\\u30D7\\u30ED\\u30D5\\u30A1\\u30A4\\u30EB: \", WIND_PROFILES[rocketSim.windProfile].name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 7\n    }, this), rocketSim.showResultsPopup && /*#__PURE__*/_jsxDEV(ResultsPopup, {\n      results: rocketSim.flightResults,\n      onClose: rocketSim.handleCloseResultsPopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1513,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 992,\n    columnNumber: 5\n  }, this);\n};\n\n// 統合されたロケットシミュレーターコンポーネント\n_c = SimulationTab;\nconst IntegratedRocketSimulator = () => {\n  _s2();\n  const [activeTab, setActiveTab] = useState(UI_CONFIG.defaultTab);\n  const [debugView, setDebugView] = useState(false);\n\n  // ロケットシミュレーターフックを使用\n  const rocketSim = useRocketSimulator();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"AVIENTER_2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex border-b mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-6 py-3 font-medium ${activeTab === 'design' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg`,\n        onClick: () => setActiveTab('design'),\n        children: \"\\u5F62\\u72B6\\u8A2D\\u8A08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-6 py-3 font-medium ${activeTab === 'analysis' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg ml-1`,\n        onClick: () => setActiveTab('analysis'),\n        children: \"\\u91CD\\u91CF\\u30FB\\u7A7A\\u529B\\u7279\\u6027\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-6 py-3 font-medium ${activeTab === 'simulation' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg ml-1`,\n        onClick: () => setActiveTab('simulation'),\n        children: \"\\u98DB\\u884C\\u30B7\\u30DF\\u30E5\\u30EC\\u30FC\\u30B7\\u30E7\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1547,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [activeTab === 'design' && /*#__PURE__*/_jsxDEV(DesignTab, {\n        rocketSim: rocketSim\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1556,\n        columnNumber: 36\n      }, this), activeTab === 'analysis' && /*#__PURE__*/_jsxDEV(AnalysisTab, {\n        rocketSim: rocketSim,\n        getSafeValue: getSafeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 38\n      }, this), activeTab === 'simulation' && /*#__PURE__*/_jsxDEV(SimulationTab, {\n        rocketSim: rocketSim,\n        debugView: debugView,\n        setDebugView: setDebugView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1558,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 pt-4 border-t border-gray-300 text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: \"\\xA9 2025 AVIATOL - \\u3054\\u5229\\u7528\\u306F\\u500B\\u4EBA\\u3067\\u306E\\u7BC4\\u56F2\\u306B\\u9650\\u308A\\u307E\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: \"\\u8A31\\u53EF\\u304C\\u306A\\u3044\\u5834\\u5408\\u3001\\u5546\\u7528\\u3067\\u306E\\u3054\\u5229\\u7528\\u306F\\u3054\\u9060\\u616E\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: \"\\u7D39\\u4ECB\\u76EE\\u7684\\u3067\\u306E\\u3054\\u5229\\u7528\\u306F\\u3053\\u306E\\u9650\\u308A\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: \"\\u3054\\u7D39\\u4ECB\\u3044\\u305F\\u3060\\u3051\\u308B\\u5834\\u5408\\u306F\\u3001info(a)aviatol.com\\u307E\\u3067\\u3054\\u9023\\u7D61\\u3092\\u304A\\u9858\\u3044\\u3057\\u307E\\u3059\\uFF08(a)\\u306F@\\u306B\\u5909\\u3048\\u3066\\u304F\\u3060\\u3055\\u3044\\uFF09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-1\",\n        children: \"\\u672C\\u30B7\\u30DF\\u30E5\\u30EC\\u30FC\\u30B7\\u30E7\\u30F3\\u306F\\u5B9F\\u6A5F\\u3067\\u306E\\u52D5\\u4F5C\\u3092\\u4FDD\\u8A3C\\u3059\\u308B\\u3082\\u306E\\u3067\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1567,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u30ED\\u30B1\\u30C3\\u30C8\\u306E\\u6253\\u4E0A\\u3052\\u306F\\u81EA\\u8EAB\\u3068\\u5468\\u308A\\u306E\\u5B89\\u5168\\u306B\\u5341\\u5206\\u914D\\u616E\\u3057\\u3001\\u500B\\u4EBA\\u306E\\u8CAC\\u4EFB\\u306E\\u7BC4\\u56F2\\u3067\\u884C\\u306A\\u3063\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1531,\n    columnNumber: 5\n  }, this);\n};\n_s2(IntegratedRocketSimulator, \"Ye6MAzXYH1YYenzViCoRCSAEUk8=\", false, function () {\n  return [useRocketSimulator];\n});\n_c2 = IntegratedRocketSimulator;\nexport default IntegratedRocketSimulator;\nvar _c, _c2;\n$RefreshReg$(_c, \"SimulationTab\");\n$RefreshReg$(_c2, \"IntegratedRocketSimulator\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useRef","SVG_CONFIG","MOTOR_THRUST_DATA","PARACHUTE_SIZES","FIN_MATERIALS","NOSE_SHAPES","WIND_PROFILES","PHYSICAL_CONSTANTS","ANGLE_RESPONSE_DT","ANGLE_STEPS_PER_UPDATE","ANIMATION_SPEED","SLIDER_DEBOUNCE_TIME","mmToM","gToKg","UI_CONFIG","ANALYSIS_VIEW_CONFIG","calculateProjectedArea","calculateVolume","calculateCenterOfPressure","calculateAerodynamicCenter","calculateStabilityCenterOfPressure","calculateStaticMargin","calculateFinDivergenceSpeed","calculateFinFlutterSpeed","formatFinDeflection","formatSpeedValue","calculateWindSpeedAtHeight","calculateFlightPath","getNosePath","getBodyPath","getLeftFinPath","getRightFinPath","getCenterFinsPath","getParachutePath","getParachuteStringPaths","getWindArrow","getWindProfileArrows","metersToSvgX","metersToSvgY","getActualRocketDimensions","getSafeRotationTransform","getAnalysisViewBox","getDesignViewBox","getRocketTransform","getSafeValue","WindAngleLimitVisualizer","ResultsPopup","LastFlightResults","ParameterSlider","DesignTab","AnalysisTab","jsxDEV","_jsxDEV","Fragment","_Fragment","useRocketSimulator","_s","noseShape","setNoseShape","noseHeight","setNoseHeight","bodyHeight","setBodyHeight","bodyWidth","setBodyWidth","finHeight","setFinHeight","finBaseWidth","setFinBaseWidth","finTipWidth","setFinTipWidth","finThickness","setFinThickness","finSweepLength","setFinSweepLength","finMaterial","setFinMaterial","finCount","setFinCount","weight","setWeight","centerOfGravity","setCenterOfGravity","selectedMotor","setSelectedMotor","selectedParachute","setSelectedParachute","launchAngle","setLaunchAngle","windSpeed","setWindSpeed","windProfile","setWindProfile","showWindArrows","setShowWindArrows","isLaunched","setIsLaunched","flightData","setFlightData","currentTime","setCurrentTime","animationId","setAnimationId","trajectoryScale","setTrajectoryScale","rocketScale","setRocketScale","currentHeight","setCurrentHeight","currentSpeed","setCurrentSpeed","currentDistance","setCurrentDistance","currentFinDeflection","setCurrentFinDeflection","currentMaxHeight","setCurrentMaxHeight","currentMaxSpeed","setCurrentMaxSpeed","currentMaxDistance","setCurrentMaxDistance","currentMaxFinDeflection","setCurrentMaxFinDeflection","completedFlights","setCompletedFlights","keyPoints","setKeyPoints","showResultsPopup","setShowResultsPopup","flightResults","setFlightResults","lastFlightResults","setLastFlightResults","projectedAreas","setProjectedAreas","volumes","setVolumes","pressureCenter","setPressureCenter","aerodynamicCenter","setAerodynamicCenter","stabilityCenterOfPressure","setStabilityCenterOfPressure","staticMargins","setStaticMargins","setNoseShapeAndUpdate","shape","newParams","simulationParams","updateCalculatedValues","sliderTimeoutRef","noseHeightInputRef","bodyHeightInputRef","bodyWidthInputRef","finHeightInputRef","finBaseWidthInputRef","finTipWidthInputRef","finThicknessInputRef","finSweepLengthInputRef","weightInputRef","centerOfGravityInputRef","launchAngleInputRef","windSpeedInputRef","debounce","func","args","handleSliderChange","ref","setter","updateValueFromEvent","event","current","rect","getBoundingClientRect","width","left","relativeX","clientX","Math","max","min","Number","step","newValue","round","onChange","e","target","value","onClick","onMouseDown","startEvent","handleMouseMove","moveEvent","preventDefault","handleMouseUp","document","removeEventListener","addEventListener","onTouchStart","touches","handleTouchMove","touch","mockEvent","clientY","handleTouchEnd","passive","design","designViewWidth","height","designViewHeight","centerX","analysis","analysisViewWidth","analysisViewHeight","convertMetersToSvgX","meters","convertMetersToSvgY","getRocketDimensions","config","getWindArrows","baseWindSpeed","profile","getParachute","x","y","isOpen","deploymentProgress","rotation","rocketLength","getParachuteStrings","computeDesignViewBox","computeAnalysisViewBox","areas","volumeData","cpData","acData","stabilityCpData","margins","calculations","actualRocketHeight","finExtension","totalHeight","cp","centerOfPressure","ac","stabilityCp","standardMargin","standardStaticMargin","stabilityMargin","stabilityStaticMargin","rocketParams","finDivergenceSpeed","finFlutterSpeed","toFixed","finDivergenceSpeedDisplay","finFlutterSpeedDisplay","getCurrentFlightPhase","length","timeIndex","floor","currentData","position","isParachuteActive","isParachuteEjected","distanceFromStart","sqrt","physicsX","physicsY","onLaunchRail","launchRailLength","thrustEndTime","getCurrentPosition","parachuteDeploymentProgress","horizontalDistance","finDeflection","isNaN","omega","PI","torque","angleChangePerDt2","abs","effectiveWindSpeed","getInitialScaleForMotor","motorType","baseScales","getMotorPowerFactor","powerFactors","handleReset","console","log","cancelAnimationFrame","stableScale","rocketScaleFactor","handleCloseResultsPopup","handleLaunch","_flight$data","flight","data","error","initialData","maxHeight","maxSpeed","maxDistance","maxFinDeflection","angleStability","maxAngleChangePerDt2","vy","speedMagnitude","startTime","performance","now","firstFrame","animate","timestamp","requestAnimationFrame","elapsed","prev","id","map","d","isDivergenceOK","isFlutterOK","maxDeflectionPercent","isDeflectionOK","isAngleStableOK","isOverallOK","results","divergenceSpeed","flutterSpeed","completedFlightData","scale","prevFlights","availableHeight","groundLevel","baseHeights","expectedBaseHeight","targetHeight","minHorizontalDistance","verticalScale","horizontalScale","motorPowerFactor","powerFactor","minScale","maxScale","rawScale","finalScale","baseRocketScale","initialScale","initialRocketScale","clearTimeout","handleNoseHeight","handleBodyHeight","handleBodyWidth","handleFinHeight","handleFinBaseWidth","handleFinTipWidth","handleFinThickness","handleFinSweepLength","handleWeight","handleCenterOfGravity","handleLaunchAngle","handleWindSpeed","SimulationTab","rocketSim","debugView","setDebugView","windArrow","rocketDisplayParams","circleRadius","attitudeDisplayScale","attitudeRocketParams","cogY","cogToBottom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","Object","entries","key","name","checked","htmlFor","viewBox","style","background","Array","from","_","i","heightMeters","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","fontSize","fill","distanceMeters","fontWeight","line","color","head","arrow","index","arrowPath","textX","textY","transform","filter","join","cx","cy","r","angle","radians","cos","sin","textAnchor","dominantBaseline","currentFlightPhase","cd","onClose","_c","IntegratedRocketSimulator","_s2","activeTab","setActiveTab","defaultTab","_c2","$RefreshReg$"],"sources":["/Users/shinoharatsubasa/Documents/RocketSim_New_2d_integ/src/components/rocket/RocketSimulator.jsx"],"sourcesContent":["// メインのシミュレーターコンポーネント\nimport React, { useState, useCallback, useEffect, useMemo, useRef } from 'react';\n\n// 定数とデータ定義のインポート\nimport { \n  SVG_CONFIG, MOTOR_THRUST_DATA, PARACHUTE_SIZES, FIN_MATERIALS, \n  NOSE_SHAPES, WIND_PROFILES, PHYSICAL_CONSTANTS, ANGLE_RESPONSE_DT,\n  ANGLE_STEPS_PER_UPDATE, ANIMATION_SPEED, SLIDER_DEBOUNCE_TIME,\n  mmToM, gToKg, UI_CONFIG, ANALYSIS_VIEW_CONFIG\n} from './RocketConstants';\n\n// 物理計算関連のインポート\nimport {\n  calculateProjectedArea, calculateVolume, calculateCenterOfPressure, \n  calculateAerodynamicCenter, calculateStabilityCenterOfPressure,\n  calculateStaticMargin, calculateFinDivergenceSpeed, calculateFinFlutterSpeed,\n  formatFinDeflection, formatSpeedValue, calculateWindSpeedAtHeight,\n  calculateFlightPath\n} from './RocketPhysics';\n\n// SVG描画関連のインポート\nimport {\n  getNosePath, getBodyPath, getLeftFinPath, getRightFinPath, getCenterFinsPath,\n  getParachutePath, getParachuteStringPaths, getWindArrow, getWindProfileArrows,\n  metersToSvgX, metersToSvgY, getActualRocketDimensions, getSafeRotationTransform,\n  getAnalysisViewBox, getDesignViewBox, getRocketTransform, getSafeValue,\n} from './RocketRendering';\n\n// UI関連のコンポーネントのインポート\nimport {\n  WindAngleLimitVisualizer, ResultsPopup, LastFlightResults,\n  ParameterSlider, DesignTab, AnalysisTab\n} from './RocketUIComponents';\n\n// ロケットデザインとシミュレーションを統合したカスタムフック\nconst useRocketSimulator = () => {\n  // Design parameters\n  const [noseShape, setNoseShape] = useState(\"ogive\");\n  const [noseHeight, setNoseHeight] = useState(57);   // 57mmに変更\n  const [bodyHeight, setBodyHeight] = useState(255);   // 255mmに変更\n  const [bodyWidth, setBodyWidth] = useState(31);\n  const [finHeight, setFinHeight] = useState(58.5);      // 58.5mmに変更\n  const [finBaseWidth, setFinBaseWidth] = useState(65); // 65mmに変更\n  const [finTipWidth, setFinTipWidth] = useState(25);   // 25mmに変更\n  const [finThickness, setFinThickness] = useState(1.5); // 1.5mmに変更\n  const [finSweepLength, setFinSweepLength] = useState(95); // 95mmに変更\n  const [finMaterial, setFinMaterial] = useState(\"light_veneer\");\n  // フィン枚数状態を追加\n  const [finCount, setFinCount] = useState(4); // デフォルトは4枚\n  \n  // Analysis parameters\n  const [weight, setWeight] = useState(50);\n  const [centerOfGravity, setCenterOfGravity] = useState(150);\n  const [selectedMotor, setSelectedMotor] = useState(\"A8-3\");\n  const [selectedParachute, setSelectedParachute] = useState(\"φ300\");\n  \n  // Simulation parameters\n  const [launchAngle, setLaunchAngle] = useState(0);\n  const [windSpeed, setWindSpeed] = useState(0);\n  const [windProfile, setWindProfile] = useState(\"uniform\");\n  const [showWindArrows, setShowWindArrows] = useState(true);\n  \n  // Simulation state\n  const [isLaunched, setIsLaunched] = useState(false);\n  const [flightData, setFlightData] = useState([]);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [animationId, setAnimationId] = useState(null);\n  const [trajectoryScale, setTrajectoryScale] = useState(1.0);\n  const [rocketScale, setRocketScale] = useState(0.1);\n  const [currentHeight, setCurrentHeight] = useState(0);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [currentDistance, setCurrentDistance] = useState(0);\n  const [currentFinDeflection, setCurrentFinDeflection] = useState(0);\n  const [currentMaxHeight, setCurrentMaxHeight] = useState(0);\n  const [currentMaxSpeed, setCurrentMaxSpeed] = useState(0);\n  const [currentMaxDistance, setCurrentMaxDistance] = useState(0);\n  const [currentMaxFinDeflection, setCurrentMaxFinDeflection] = useState(0);\n  const [completedFlights, setCompletedFlights] = useState([]);\n  const [keyPoints, setKeyPoints] = useState({});\n\n  // 状態変数の追加\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [flightResults, setFlightResults] = useState(null);\n  const [lastFlightResults, setLastFlightResults] = useState(null);\n  \n  // 新しく追加した状態変数\n  const [projectedAreas, setProjectedAreas] = useState(null);\n  const [volumes, setVolumes] = useState(null);\n  const [pressureCenter, setPressureCenter] = useState(null);\n  const [aerodynamicCenter, setAerodynamicCenter] = useState(null);\n  const [stabilityCenterOfPressure, setStabilityCenterOfPressure] = useState(null);\n  const [staticMargins, setStaticMargins] = useState(null);\n\n  // useRocketSimulator内で、noseShapeの状態変更を正しく伝播するように修正\nconst setNoseShapeAndUpdate = (shape) => {\n    setNoseShape(shape);\n    // 他の依存状態も更新を促す\n    const newParams = {\n      ...simulationParams,\n      noseShape: shape\n    };\n    \n    // 投影面積などの再計算をトリガー\n    updateCalculatedValues(newParams);\n  };\n  \n  // スライダーの動きをスムーズにするためのdebounce用ref\n  const sliderTimeoutRef = useRef(null);\n\n  // スライダーのリファレンスを保持するための変数\n  const noseHeightInputRef = useRef(null);\n  const bodyHeightInputRef = useRef(null);\n  const bodyWidthInputRef = useRef(null);\n  const finHeightInputRef = useRef(null);\n  const finBaseWidthInputRef = useRef(null);\n  const finTipWidthInputRef = useRef(null);\n  const finThicknessInputRef = useRef(null);\n  const finSweepLengthInputRef = useRef(null);\n  const weightInputRef = useRef(null);\n  const centerOfGravityInputRef = useRef(null);\n  const launchAngleInputRef = useRef(null);\n  const windSpeedInputRef = useRef(null);\n  \n  // スムーズなスライダー操作のためのdebounce関数\n  const debounce = (func) => {\n    // デバウンスを実質的に無効化して直接値を更新\n    return (...args) => {\n      func(...args);\n    };\n  };\n\n  // スライダー値の更新処理をよりダイレクトにするハンドラーを追加\n  const handleSliderChange = useCallback((ref, setter) => {\n    // マウスイベントの処理関数\n    const updateValueFromEvent = (event) => {\n      if (!ref.current) return;\n      \n      const rect = ref.current.getBoundingClientRect();\n      const width = rect.width;\n      const left = rect.left;\n      \n      // マウス位置をスライダー内の相対位置(0～1)に変換\n      let relativeX = (event.clientX - left) / width;\n      // 範囲外の場合はクランプ(0～1に制限)\n      relativeX = Math.max(0, Math.min(1, relativeX));\n      \n      // スライダーの最小値と最大値\n      const min = Number(ref.current.min);\n      const max = Number(ref.current.max);\n      const step = Number(ref.current.step) || 1;\n      \n      // 相対位置から実際の値を計算\n      let newValue = min + relativeX * (max - min);\n      \n      // 設定されたstepに基づいて値を丸める\n      if (step !== 0) {\n        newValue = Math.round(newValue / step) * step;\n      }\n      \n      // 念のため、最終値を最小値と最大値の範囲内に収める\n      newValue = Math.max(min, Math.min(max, newValue));\n      \n      // 値を更新 - 常にNumberとして扱う\n      setter(Number(newValue));\n    };\n    \n    return {\n      // 値変更イベント(標準のonChange) - 明示的にNumberに変換\n      onChange: (e) => setter(Number(e.target.value)),\n      \n      // トラックのクリックイベント(スライダー上の任意の位置)\n      onClick: updateValueFromEvent,\n      \n      // スライダーのドラッグ開始\n      onMouseDown: (startEvent) => {\n        // ドキュメント全体でのマウス移動を監視\n        const handleMouseMove = (moveEvent) => {\n          moveEvent.preventDefault();\n          updateValueFromEvent(moveEvent);\n        };\n        \n        // マウスボタンを離したときの処理\n        const handleMouseUp = () => {\n          document.removeEventListener('mousemove', handleMouseMove);\n          document.removeEventListener('mouseup', handleMouseUp);\n        };\n        \n        // 最初のクリック位置で値を更新\n        updateValueFromEvent(startEvent);\n        \n        // ドキュメント全体にイベントリスナーを追加\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', handleMouseUp);\n      },\n      \n      // タッチデバイス対応\n      onTouchStart: (startEvent) => {\n        if (!startEvent.touches[0]) return;\n        \n        const handleTouchMove = (moveEvent) => {\n          if (!moveEvent.touches[0]) return;\n          moveEvent.preventDefault();\n          \n          const touch = moveEvent.touches[0];\n          const mockEvent = { clientX: touch.clientX, clientY: touch.clientY };\n          updateValueFromEvent(mockEvent);\n        };\n        \n        const handleTouchEnd = () => {\n          document.removeEventListener('touchmove', handleTouchMove);\n          document.removeEventListener('touchend', handleTouchEnd);\n        };\n        \n        const touch = startEvent.touches[0];\n        const mockEvent = { clientX: touch.clientX, clientY: touch.clientY };\n        updateValueFromEvent(mockEvent);\n        \n        document.addEventListener('touchmove', handleTouchMove, { passive: false });\n        document.addEventListener('touchend', handleTouchEnd);\n      }\n    };\n  }, []);\n  \n  // Design display dimensions\n  const design = useMemo(() => ({\n    width: UI_CONFIG.designViewWidth,\n    height: UI_CONFIG.designViewHeight,\n    centerX: UI_CONFIG.designViewWidth / 2\n  }), []);\n\n  const analysis = useMemo(() => ({\n    width: UI_CONFIG.analysisViewWidth,\n    height: UI_CONFIG.analysisViewHeight,\n    centerX: UI_CONFIG.analysisViewWidth / 2\n  }), []);\n  \n  // メートル単位からSVG座標への変換関数の修正版\n  const convertMetersToSvgX = useCallback((meters) => {\n    return metersToSvgX(meters, trajectoryScale);\n  }, [trajectoryScale]);\n  \n  const convertMetersToSvgY = useCallback((meters) => {\n    return metersToSvgY(meters, trajectoryScale);\n  }, [trajectoryScale]);\n\n  // 実際のロケット寸法を計算するためのラッパー\n  const getRocketDimensions = useCallback((config) => {\n    return getActualRocketDimensions(\n      config, noseHeight, bodyHeight, \n      finSweepLength, finTipWidth, finBaseWidth\n    );\n  }, [noseHeight, bodyHeight, finSweepLength, finTipWidth, finBaseWidth]);\n  \n  // 視覚化のための風速高度分布矢印ラッパー\n  const getWindArrows = useCallback((baseWindSpeed, profile) => {\n    return getWindProfileArrows(\n      baseWindSpeed, profile, showWindArrows, \n      convertMetersToSvgY, calculateWindSpeedAtHeight\n    );\n  }, [showWindArrows, convertMetersToSvgY]);\n  \n  // パラシュート描画関数のラッパー\n  const getParachute = useCallback((x, y, isOpen, deploymentProgress, rotation) => {\n    const rocketLength = mmToM(noseHeight + bodyHeight);\n    return getParachutePath(\n      x, y, isOpen, deploymentProgress, rotation,\n      rocketLength, selectedParachute, trajectoryScale\n    );\n  }, [noseHeight, bodyHeight, selectedParachute, trajectoryScale]);\n  \n  const getParachuteStrings = useCallback((x, y, isOpen, deploymentProgress, rotation) => {\n    const rocketLength = mmToM(noseHeight + bodyHeight);\n    return getParachuteStringPaths(\n      x, y, isOpen, deploymentProgress, rotation,\n      rocketLength, selectedParachute, trajectoryScale\n    );\n  }, [noseHeight, bodyHeight, selectedParachute, trajectoryScale]);\n  \n  // viewBox計算関数のラッパー\n  const computeDesignViewBox = useCallback(() => {\n    return getDesignViewBox(\n      design, noseHeight, bodyHeight, \n      finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth\n    );\n  }, [design, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth]);\n  \n  const computeAnalysisViewBox = useCallback(() => {\n    return getAnalysisViewBox(\n      analysis, noseHeight, bodyHeight, \n      finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth\n    );\n  }, [analysis, noseHeight, bodyHeight, finHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth]);\n  \n  // 物理計算のための全パラメータをまとめる\n  const simulationParams = useMemo(() => ({\n    noseShape,\n    noseHeight,\n    bodyHeight,\n    bodyWidth,\n    finHeight,\n    finBaseWidth,\n    finTipWidth,\n    finThickness,\n    finSweepLength,\n    finMaterial,\n    weight,\n    centerOfGravity,\n    selectedMotor,\n    selectedParachute\n  }), [\n    noseShape, noseHeight, bodyHeight, bodyWidth, \n    finHeight, finBaseWidth, finTipWidth, finThickness, finSweepLength,\n    finMaterial, weight, centerOfGravity, selectedMotor, selectedParachute\n  ]);\n\n  // 動的に計算結果を更新する\n  useEffect(() => {\n    // 投影面積、体積、圧力中心位置、空力中心位置を計算\n    const areas = calculateProjectedArea(simulationParams);\n    const volumeData = calculateVolume(simulationParams);\n    const cpData = calculateCenterOfPressure(simulationParams);\n    const acData = calculateAerodynamicCenter(simulationParams);\n    const stabilityCpData = calculateStabilityCenterOfPressure(simulationParams);\n    const margins = calculateStaticMargin(simulationParams);\n    \n    // 状態を更新\n    setProjectedAreas(areas);\n    setVolumes(volumeData);\n    setPressureCenter(cpData);\n    setAerodynamicCenter(acData);\n    setStabilityCenterOfPressure(stabilityCpData);\n    setStaticMargins(margins);\n    \n  }, [simulationParams]);\n  \n  // 計算結果のキャッシュ\n  const calculations = useMemo(() => {\n    // 機体本体の高さ\n    const actualRocketHeight = noseHeight + bodyHeight;\n    // フィンの後端がボディ後端よりも出る場合の計算\n    const finExtension = Math.max(0, finSweepLength + finTipWidth - finBaseWidth);\n    // 全長は機体長 + フィン後端部分\n    const totalHeight = actualRocketHeight + finExtension;\n    \n    // 圧力中心位置と空力中心位置（新しい計算結果を使用）\n    const cp = pressureCenter?.centerOfPressure || (totalHeight * 0.7);\n    const ac = aerodynamicCenter?.aerodynamicCenter || (totalHeight * 0.65);\n    const stabilityCp = stabilityCenterOfPressure?.stabilityCenterOfPressure || (totalHeight * 0.6);\n    \n    // 姿勢安定性マージン - 重心位置との距離\n    const standardMargin = staticMargins?.standardStaticMargin || ((cp - centerOfGravity) / bodyWidth);\n    const stabilityMargin = staticMargins?.stabilityStaticMargin || ((stabilityCp - centerOfGravity) / bodyWidth);\n    \n    // 新しい計算関数を使用してフィン限界速度を計算\n    const rocketParams = {\n      noseHeight, bodyHeight, bodyWidth, finHeight, finBaseWidth, finTipWidth, \n      finThickness, finSweepLength, finMaterial, centerOfGravity, weight\n    };\n    \n    const finDivergenceSpeed = calculateFinDivergenceSpeed(rocketParams);\n    const finFlutterSpeed = calculateFinFlutterSpeed(rocketParams);\n    \n    return {\n      totalHeight: totalHeight,\n      actualRocketHeight: actualRocketHeight,\n      finExtension: finExtension,\n      aerodynamicCenter: Math.round(ac),\n      pressureCenter: Math.round(cp),\n      stabilityCenterOfPressure: Math.round(stabilityCp),\n      standardStaticMargin: standardMargin.toFixed(2),\n      stabilityStaticMargin: stabilityMargin.toFixed(2),\n      finDivergenceSpeed: Math.round(finDivergenceSpeed),\n      finFlutterSpeed: Math.round(finFlutterSpeed),\n      // フォーマット済みの値を追加\n      finDivergenceSpeedDisplay: formatSpeedValue(finDivergenceSpeed),\n      finFlutterSpeedDisplay: formatSpeedValue(finFlutterSpeed)\n    };\n  }, [noseHeight, bodyHeight, finSweepLength, finTipWidth, finBaseWidth, bodyWidth, centerOfGravity, \n     pressureCenter, aerodynamicCenter, stabilityCenterOfPressure, staticMargins, \n     finHeight, finThickness, finMaterial, weight]);\n\n  // 現在の飛行フェーズを取得する関数\n  const getCurrentFlightPhase = useCallback(() => {\n    if (!isLaunched || !flightData || flightData.length === 0) {\n      return \"未発射\";\n    }\n\n    // プロパティの安全性を考慮して独自に計算\n    const timeIndex = Math.min(Math.floor(currentTime / 0.02), flightData.length - 1);\n    if (timeIndex < 0 || timeIndex >= flightData.length) {\n      return \"未発射\";\n    }\n\n    const currentData = flightData[timeIndex];\n    if (!currentData) {\n      return \"未発射\";\n    }\n\n    const position = {\n      isParachuteActive: currentData.isParachuteActive,\n      isParachuteEjected: currentData.isParachuteEjected\n    };\n\n    if (position.isParachuteActive) {\n      return \"パラシュート降下\";\n    } else if (position.isParachuteEjected) {\n      return \"パラシュート展開中\";\n    }\n\n    // 発射台からの距離を計算\n    const distanceFromStart = Math.sqrt(\n      currentData.physicsX * currentData.physicsX + \n      currentData.physicsY * currentData.physicsY\n    );\n\n    const onLaunchRail = distanceFromStart < PHYSICAL_CONSTANTS.launchRailLength;\n\n    if (onLaunchRail) {\n      return \"発射台上\";\n    }\n\n    // エンジン推力が残っているか確認\n    const thrustEndTime = MOTOR_THRUST_DATA[selectedMotor].length * 0.02;\n    if (currentTime <= thrustEndTime) {\n      return \"推力飛行\";\n    }\n\n    return \"慣性飛行\";\n  }, [isLaunched, flightData, currentTime, selectedMotor]);\n\n  // 現在の位置情報を取得\n  const getCurrentPosition = useCallback(() => {\n    if (!isLaunched || !flightData || flightData.length === 0) {\n      // 初期状態・未発射状態\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n\n    const timeIndex = Math.min(Math.floor(currentTime / 0.02), flightData.length - 1);\n    if (timeIndex < 0 || timeIndex >= flightData.length) {\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n\n    const currentData = flightData[timeIndex];\n    if (!currentData) {\n      return {\n        physicsX: 0,\n        physicsY: 0,\n        rotation: launchAngle,\n        isParachuteEjected: false,\n        isParachuteActive: false,\n        parachuteDeploymentProgress: 0,\n        horizontalDistance: 0,\n        finDeflection: 0\n      };\n    }\n\n    // すべての数値にNaNチェックを追加\n    return {\n      physicsX: isNaN(currentData.physicsX) ? 0 : currentData.physicsX,\n      physicsY: isNaN(currentData.physicsY) ? 0 : currentData.physicsY,\n      rotation: isNaN(currentData.omega) ? launchAngle : (currentData.omega * 180 / Math.PI),\n      isParachuteEjected: currentData.isParachuteEjected || false,\n      isParachuteActive: currentData.isParachuteActive || false,\n      parachuteDeploymentProgress: isNaN(currentData.parachuteDeploymentProgress) ? 0 : \n        (currentData.parachuteDeploymentProgress || 0),\n      torque: isNaN(currentData.torque) ? 0 : (currentData.torque || 0),\n      angleChangePerDt2: isNaN(currentData.angleChangePerDt2) ? 0 : (currentData.angleChangePerDt2 || 0),\n      horizontalDistance: isNaN(currentData.horizontalDistance) ? 0 : \n        (currentData.horizontalDistance || Math.abs(isNaN(currentData.physicsX) ? 0 : currentData.physicsX) || 0),\n      finDeflection: isNaN(currentData.finDeflection) ? 0 : (currentData.finDeflection || 0),\n      effectiveWindSpeed: isNaN(currentData.effectiveWindSpeed) ? 0 : (currentData.effectiveWindSpeed || 0)\n    };\n  }, [isLaunched, flightData, currentTime, launchAngle]);\n\n  // モーターに応じた初期スケール値を取得する関数\n  const getInitialScaleForMotor = (motorType) => {\n    const baseScales = {\n      '1/2A6-2': 16,  // 強化された値\n      'A8-3': 12,     // 強化された値\n      'B6-4': 8       // 強化された値\n    };\n    return baseScales[motorType] || 12; // デフォルト値も強化\n  };\n\n  // モーターのパワー係数を取得する関数\n  const getMotorPowerFactor = (motorType) => {\n    const powerFactors = {\n      '1/2A6-2': 0.6, // 調整された値\n      'A8-3': 0.5,    // 調整された値\n      'B6-4': 0.4     // 調整された値\n    };\n    return powerFactors[motorType] || 0.5; // デフォルト値も調整\n  };\n\n  // リセット関数を強化\n  const handleReset = useCallback(() => {\n    console.log('リセット処理開始');\n\n    // アニメーションをキャンセル\n    if (animationId) {\n      cancelAnimationFrame(animationId);\n      setAnimationId(null);\n    }\n\n    // 現在の結果を前回の結果として保存\n    if (flightResults) {\n      setLastFlightResults(flightResults);\n      setFlightResults(null);\n    }\n\n    // ポップアップを閉じる\n    setShowResultsPopup(false);\n\n    // すべての状態をリセット\n    setIsLaunched(false);\n    setFlightData([]);\n    setCurrentTime(0);\n    setCurrentHeight(0);\n    setCurrentSpeed(0);\n    setCurrentDistance(0);\n    setCurrentFinDeflection(0);\n    setCurrentMaxHeight(0);\n    setCurrentMaxSpeed(0);\n    setCurrentMaxDistance(0);\n    setCurrentMaxFinDeflection(0);\n\n    // 過去の飛行軌跡をクリア\n    setCompletedFlights([]); \n\n    // モーターに応じた適切なスケールを設定\n    const stableScale = getInitialScaleForMotor(selectedMotor);\n    setTrajectoryScale(stableScale);\n\n    // ロケットスケールも設定\n    const rocketScaleFactor = 0.03 * getMotorPowerFactor(selectedMotor);\n    setRocketScale(rocketScaleFactor);\n\n    console.log('シミュレーションが完全にリセットされました。新しいスケール: ', stableScale);\n  }, [animationId, flightResults, selectedMotor]);\n\n  // ポップアップを閉じる関数\n  const handleCloseResultsPopup = useCallback(() => {\n    setShowResultsPopup(false);\n    // 現在の結果を前回の結果として保存\n    if (flightResults) {\n      setLastFlightResults(flightResults);\n    }\n  }, [flightResults]);\n\n  const handleLaunch = useCallback(() => {\n    if (isLaunched) return;\n\n    try {\n      // 風速プロファイルを引数として渡す\n      const flight = calculateFlightPath(\n        simulationParams, \n        launchAngle, \n        windSpeed, \n        windProfile, // 風速プロファイルを追加\n        SVG_CONFIG\n      );\n      \n      if (!flight?.data?.length) {\n        console.error('フライトデータが空です');\n        return;\n      }\n\n      // 初期データを取得（最初のフレーム用）\n      const initialData = flight.data[0];\n      console.log('初期フライトデータ：', initialData);\n      console.log(`最高到達高度: ${flight.maxHeight.toFixed(2)}m, 最高速度: ${flight.maxSpeed.toFixed(2)}m/s, 最大水平距離: ${flight.maxDistance.toFixed(2)}m`);\n      console.log(`最大フィンたわみ量: ${flight.maxFinDeflection.toFixed(4)}mm`);\n      console.log(`姿勢安定性: 最大角度変化量=${flight.angleStability.maxAngleChangePerDt2.toFixed(2)}°`);\n      \n      // キーポイントを保存\n      setKeyPoints(flight.keyPoints);\n\n      setFlightData(flight.data);\n      setIsLaunched(true);\n      setCurrentTime(0);\n      \n      // 初期値を明示的に設定\n      setCurrentHeight(initialData.height || 0);\n      setCurrentSpeed(initialData.vy || 0);\n      setCurrentDistance(initialData.horizontalDistance || 0);\n      setCurrentFinDeflection(initialData.finDeflection || 0);\n      setCurrentMaxHeight(initialData.height || 0);\n      setCurrentMaxSpeed(Math.abs(initialData.speedMagnitude) || 0);\n      setCurrentMaxDistance(0); // 最大水平距離の初期値\n      setCurrentMaxFinDeflection(0); // 最大フィンたわみ量の初期値\n\n      // アニメーション開始時間を記録\n      const startTime = performance.now();\n      let firstFrame = true;\n      \n      const animate = (timestamp) => {\n        // 初回フレームの特別処理\n        if (firstFrame) {\n          firstFrame = false;\n          requestAnimationFrame(animate);\n          return;\n        }\n        \n        try {\n          // アニメーション開始からの累積時間を計算（ANIMATION_SPEEDで調整）\n          const elapsed = Math.max(0, (timestamp - startTime) / 1000 * ANIMATION_SPEED);\n          \n          // シミュレーションデータのインデックスを計算 - Math.maxを追加して負のインデックスを防止\n          const timeIndex = Math.max(0, Math.min(Math.floor(elapsed / 0.02), flight.data.length - 1));\n          \n          // 追加のデバッグログ - 100フレームごとに状態を記録\n          if (timeIndex % 100 === 0) {\n            console.log(`Animation frame: time=${elapsed.toFixed(2)}s, index=${timeIndex}, total=${flight.data.length}`);\n          }\n          \n          // データの安全性チェック\n          if (timeIndex >= 0 && timeIndex < flight.data.length) {\n            const currentData = flight.data[timeIndex];\n            \n            if (currentData && typeof currentData === 'object') {\n              // NaNチェックを追加\n              setCurrentTime(elapsed);\n              setCurrentHeight(isNaN(currentData.height) ? 0 : currentData.height || 0);\n              setCurrentSpeed(isNaN(currentData.vy) ? 0 : currentData.vy || 0);\n              setCurrentDistance(isNaN(currentData.horizontalDistance) ? 0 : \n                (currentData.horizontalDistance || Math.abs(isNaN(currentData.physicsX) ? 0 : currentData.physicsX) || 0));\n              \n              // フィンたわみ量のNaNチェック\n              const finDeflection = isNaN(currentData.finDeflection) ? 0 : currentData.finDeflection || 0;\n              setCurrentFinDeflection(finDeflection);\n              \n              // 最大値の安全な更新\n              setCurrentMaxHeight(prev => Math.max(prev, isNaN(currentData.height) ? 0 : currentData.height || 0));\n              setCurrentMaxSpeed(prev => Math.max(prev, isNaN(currentData.speedMagnitude) ? 0 : \n                Math.abs(currentData.speedMagnitude) || 0));\n              setCurrentMaxDistance(prev => Math.max(prev, isNaN(currentData.physicsX) ? 0 : \n                Math.abs(currentData.physicsX) || 0));\n              \n              // 最大フィンたわみ量の更新\n              setCurrentMaxFinDeflection(prev => Math.max(prev, finDeflection));\n\n              // アニメーションをデータの最後まで続けるようにする\n              if (timeIndex < flight.data.length - 1) {\n                const id = requestAnimationFrame(animate);\n                setAnimationId(id);\n              } else {\n                // アニメーション終了 - 最終フレームに到達した時だけ結果を表示\n                console.log('アニメーション完了: 最終インデックス到達');\n                \n                // シミュレーションデータから最大値を直接計算（状態変数に依存せず確実に取得）\n                const maxHeight = Math.max(...flight.data.map(d => isNaN(d.height) ? 0 : d.height || 0));\n                const maxSpeed = Math.max(...flight.data.map(d => isNaN(d.speedMagnitude) ? 0 : \n                  Math.abs(d.speedMagnitude) || 0));\n                const maxDistance = Math.max(...flight.data.map(d => isNaN(d.physicsX) ? 0 : \n                  Math.abs(d.physicsX) || 0));\n                const maxFinDeflection = Math.max(...flight.data.map(d => isNaN(d.finDeflection) ? 0 : \n                  d.finDeflection || 0));\n\n                // 飛行結果の評価（直接計算した最大値を使用）\n                const isDivergenceOK = maxSpeed < flight.calculations.finDivergenceSpeed;\n                const isFlutterOK = maxSpeed < flight.calculations.finFlutterSpeed;\n                const maxDeflectionPercent = (maxFinDeflection / finHeight) * 100;\n                const isDeflectionOK = maxDeflectionPercent <= 3;\n                \n                // 姿勢安定性の判定結果 - 最大角度偏差を使用しない\n                const isAngleStableOK = flight.angleStability.isAngleStableOK;\n                const maxAngleChangePerDt2 = flight.angleStability.maxAngleChangePerDt2;\n                \n                // 総合判定は全てのチェックをパスする必要がある\n                const isOverallOK = isDivergenceOK && isFlutterOK && isDeflectionOK && isAngleStableOK;\n\n                // 結果オブジェクトの作成\n                const results = {\n                  maxSpeed: maxSpeed,\n                  maxHeight: maxHeight,\n                  maxDistance: maxDistance,\n                  maxFinDeflection: maxFinDeflection,\n                  finHeight: finHeight,\n                  maxDeflectionPercent: maxDeflectionPercent,\n                  divergenceSpeed: formatSpeedValue(flight.calculations.finDivergenceSpeed),\n                  flutterSpeed: formatSpeedValue(flight.calculations.finFlutterSpeed),\n                  isDivergenceOK,\n                  isFlutterOK,\n                  isDeflectionOK,\n                  isAngleStableOK,\n                  maxAngleChangePerDt2,\n                  isOverallOK,\n                  launchAngle,\n                  windSpeed,\n                  windProfile\n                };\n\n                // 状態更新を一度に行う\n                setFlightResults(results);\n                setShowResultsPopup(true);\n\n                // UI上の最大値表示も更新\n                setCurrentMaxHeight(maxHeight);\n                setCurrentMaxSpeed(maxSpeed);\n                setCurrentMaxDistance(maxDistance);\n                setCurrentMaxFinDeflection(maxFinDeflection);\n\n                const completedFlightData = {\n                  data: [...flight.data],\n                  launchAngle,\n                  windSpeed,\n                  windProfile,\n                  maxHeight: maxHeight,\n                  maxSpeed: maxSpeed,\n                  maxDistance: maxDistance,\n                  maxFinDeflection: maxFinDeflection,\n                  scale: trajectoryScale,\n                  results: results // 結果も保存\n                };\n\n                setCompletedFlights(prevFlights => [...prevFlights, completedFlightData]);\n                setIsLaunched(false);\n              }              \n            }\n          }\n        } catch (error) {\n          // エラーが発生した場合は記録して次のフレームを試行\n          console.error('Animation frame error:', error);\n          \n          // 重大なエラーでなければ次のフレームを継続\n          if (timeIndex < flight.data.length - 1) {\n            const id = requestAnimationFrame(animate);\n            setAnimationId(id);\n          } else {\n            // エラー発生時も最終フレームに達していれば終了処理\n            handleReset();\n          }\n        }\n      };\n      \n      // アニメーション開始\n      requestAnimationFrame(animate);\n    } catch (error) {\n      console.error('Launch error:', error);\n      handleReset();\n    }\n  }, [isLaunched, launchAngle, windSpeed, windProfile, simulationParams, handleReset, finHeight, trajectoryScale, ANIMATION_SPEED]);\n\n  // パラメータ変更時のスケール更新\n  useEffect(() => {\n    if (isLaunched) return;\n\n    // 風速プロファイルを引数として渡す\n    const flight = calculateFlightPath(\n      simulationParams, \n      launchAngle, \n      windSpeed, \n      windProfile, // 風速プロファイルを追加\n      SVG_CONFIG\n    );\n\n    if (flight && flight.maxHeight > 0) {\n      const availableHeight = SVG_CONFIG.height - SVG_CONFIG.groundLevel;\n      \n      // 改良：より高いベース高さを設定\n      const baseHeights = {\n        '1/2A6-2': 100,\n        'A8-3': 150,\n        'B6-4': 200\n      };\n      \n      const expectedBaseHeight = baseHeights[simulationParams.selectedMotor] || 150;\n      const targetHeight = Math.max(flight.maxHeight * 1.3, expectedBaseHeight);\n      \n      const minHorizontalDistance = expectedBaseHeight * 0.9;\n      const maxDistance = Math.max(flight.maxDistance || 0, minHorizontalDistance);\n      \n      // スケール計算\n      const verticalScale = availableHeight / targetHeight;\n      const horizontalScale = (SVG_CONFIG.width * 0.9) / (maxDistance * 2 || 1);\n      \n      const motorPowerFactor = {\n        '1/2A6-2': 0.45,\n        'A8-3': 0.35,\n        'B6-4': 0.25\n      };\n      \n      const powerFactor = motorPowerFactor[simulationParams.selectedMotor] || 0.35;\n      \n      // 最小/最大スケール値の調整\n      const minScale = 10;\n      const maxScale = 24;\n      \n      const rawScale = Math.min(verticalScale, horizontalScale) * powerFactor;\n      // 最終スケールを調整 - 必ず最小スケールを適用\n      const finalScale = Math.max(minScale, Math.min(maxScale, rawScale));\n      \n      // スケール設定\n      setTrajectoryScale(finalScale);\n      \n      // ロケットスケールをさらに小さく\n      const baseRocketScale = 0.03;\n      setRocketScale(baseRocketScale * powerFactor);\n      \n      console.log(`パラメータ更新: モーター=${simulationParams.selectedMotor}, 高度=${flight.maxHeight.toFixed(1)}m, スケール=${finalScale.toFixed(2)}`);\n    }\n  }, [isLaunched, launchAngle, windSpeed, windProfile, simulationParams]);\n\n  // 初期表示時の強制スケール設定用のuseEffect追加\n  useEffect(() => {\n    // コンポーネント初期マウント時に強制的にスケールを設定\n    const initialScale = getInitialScaleForMotor(selectedMotor);\n    const initialRocketScale = 0.03 * getMotorPowerFactor(selectedMotor);\n    \n    setTrajectoryScale(initialScale);\n    setRocketScale(initialRocketScale);\n    \n    console.log(`初期表示: スケール=${initialScale}, ロケットスケール=${initialRocketScale}`);\n  }, []); // 空の依存配列で初回のみ実行\n\n  // クリーンアップ\n  useEffect(() => {\n    return () => {\n      if (animationId) {\n        cancelAnimationFrame(animationId);\n      }\n      if (sliderTimeoutRef.current) {\n        clearTimeout(sliderTimeoutRef.current);\n      }\n    };\n  }, [animationId]);\n\n  // 本フックから公開する関数とパラメータ\n  return {\n    // デザインパラメータ\n    noseShape, setNoseShape: setNoseShapeAndUpdate,\n    noseHeight, setNoseHeight: debounce(setNoseHeight, SLIDER_DEBOUNCE_TIME),\n    bodyHeight, setBodyHeight: debounce(setBodyHeight, SLIDER_DEBOUNCE_TIME),\n    bodyWidth, setBodyWidth: debounce(setBodyWidth, SLIDER_DEBOUNCE_TIME),\n    finHeight, setFinHeight: debounce(setFinHeight, SLIDER_DEBOUNCE_TIME),\n    finBaseWidth, setFinBaseWidth: debounce(setFinBaseWidth, SLIDER_DEBOUNCE_TIME),\n    finTipWidth, setFinTipWidth: debounce(setFinTipWidth, SLIDER_DEBOUNCE_TIME),\n    finThickness, setFinThickness: debounce(setFinThickness, SLIDER_DEBOUNCE_TIME),\n    finSweepLength, setFinSweepLength: debounce(setFinSweepLength, SLIDER_DEBOUNCE_TIME),\n    finMaterial, setFinMaterial,\n    finCount, setFinCount,\n    \n    // 分析パラメータ\n    weight, setWeight: debounce(setWeight, SLIDER_DEBOUNCE_TIME),\n    centerOfGravity, setCenterOfGravity: debounce(setCenterOfGravity, SLIDER_DEBOUNCE_TIME),\n    selectedMotor, setSelectedMotor,\n    selectedParachute, setSelectedParachute,\n    \n    // シミュレーションパラメータ\n    launchAngle, setLaunchAngle: debounce(setLaunchAngle, SLIDER_DEBOUNCE_TIME),\n    windSpeed, setWindSpeed: debounce(setWindSpeed, SLIDER_DEBOUNCE_TIME),\n    windProfile, setWindProfile,\n    showWindArrows, setShowWindArrows,\n    \n    // シミュレーション状態\n    isLaunched, setIsLaunched,\n    flightData, currentTime,\n    currentHeight, currentSpeed, currentDistance, currentFinDeflection,\n    currentMaxHeight, currentMaxSpeed, currentMaxDistance, currentMaxFinDeflection,\n    completedFlights, keyPoints,\n    \n    // 表示設定\n    design, analysis,\n    trajectoryScale, rocketScale,\n    \n    // 新しい計算結果\n    projectedAreas, volumes, pressureCenter, aerodynamicCenter, stabilityCenterOfPressure, staticMargins,\n    \n    // 計算結果\n    calculations,\n\n    // スライダーのデータと更新関数\n    noseHeightInputRef, handleNoseHeight: handleSliderChange(noseHeightInputRef, setNoseHeight),\n    bodyHeightInputRef, handleBodyHeight: handleSliderChange(bodyHeightInputRef, setBodyHeight),\n    bodyWidthInputRef, handleBodyWidth: handleSliderChange(bodyWidthInputRef, setBodyWidth),\n    finHeightInputRef, handleFinHeight: handleSliderChange(finHeightInputRef, setFinHeight),\n    finBaseWidthInputRef, handleFinBaseWidth: handleSliderChange(finBaseWidthInputRef, setFinBaseWidth),\n    finTipWidthInputRef, handleFinTipWidth: handleSliderChange(finTipWidthInputRef, setFinTipWidth),\n    finThicknessInputRef, handleFinThickness: handleSliderChange(finThicknessInputRef, setFinThickness),\n    finSweepLengthInputRef, handleFinSweepLength: handleSliderChange(finSweepLengthInputRef, setFinSweepLength),\n    weightInputRef, handleWeight: handleSliderChange(weightInputRef, setWeight),\n    centerOfGravityInputRef, handleCenterOfGravity: handleSliderChange(centerOfGravityInputRef, setCenterOfGravity),\n    launchAngleInputRef, handleLaunchAngle: handleSliderChange(launchAngleInputRef, setLaunchAngle),\n    windSpeedInputRef, handleWindSpeed: handleSliderChange(windSpeedInputRef, setWindSpeed),\n    \n    // 描画関数 - 外部のレンダリング関数を呼び出すためのラッパー\n    getNosePath: (config) => getNosePath(config, noseShape, noseHeight, bodyWidth, bodyHeight),\n    getBodyPath: (config) => getBodyPath(config, bodyHeight, bodyWidth),\n    getLeftFinPath: (config) => getLeftFinPath(config, bodyWidth, finHeight, finBaseWidth, finSweepLength, finTipWidth),\n    getRightFinPath: (config) => getRightFinPath(config, bodyWidth, finHeight, finBaseWidth, finSweepLength, finTipWidth),\n    getCenterFinsPath: (config) => getCenterFinsPath(config, finThickness, finBaseWidth, finSweepLength, finTipWidth),\n    getParachutePath: getParachute,\n    getParachuteStringPaths: getParachuteStrings,\n    getWindArrow,\n    getWindProfileArrows: getWindArrows,\n\n    // 座標変換\n    metersToSvgX: convertMetersToSvgX,\n    metersToSvgY: convertMetersToSvgY,\n    \n    // viewBox計算\n    getDesignViewBox: computeDesignViewBox,\n    getAnalysisViewBox: computeAnalysisViewBox,\n    \n    // ユーティリティ関数\n    getActualRocketDimensions: getRocketDimensions,\n    getCurrentPosition,\n    calculateWindSpeedAtHeight,\n    formatFinDeflection,\n    getSafeValue,\n    \n    // 操作関数\n    handleLaunch, \n    handleReset,\n\n    // 結果表示関連\n    showResultsPopup,\n    flightResults,\n    lastFlightResults,\n    getCurrentFlightPhase,\n    handleCloseResultsPopup\n  };\n};\n\n// シミュレーションタブコンポーネント\nconst SimulationTab = ({ rocketSim, debugView, setDebugView }) => {\n  const position = rocketSim.getCurrentPosition();\n  const windArrow = rocketSim.getWindArrow(rocketSim.windSpeed);\n\n  // ロケットパラメータを表示用にスケーリング\n  const rocketDisplayParams = {\n    bodyWidth: rocketSim.bodyWidth * rocketSim.rocketScale,\n    bodyHeight: rocketSim.bodyHeight * rocketSim.rocketScale,\n    noseHeight: rocketSim.noseHeight * rocketSim.rocketScale,\n    finHeight: rocketSim.finHeight * rocketSim.rocketScale,\n    finBaseWidth: rocketSim.finBaseWidth * rocketSim.rocketScale,\n    finTipWidth: rocketSim.finTipWidth * rocketSim.rocketScale,\n    finThickness: rocketSim.finThickness * rocketSim.rocketScale,\n    finSweepLength: rocketSim.finSweepLength * rocketSim.rocketScale\n  };\n\n  // 姿勢表示用のロケットスケールを自動計算\n  // 円の表示エリアの大きさに基づいて計算\n  const circleRadius = 90; // 円の有効半径（余白含む）\n  const { totalHeight } = rocketSim.getActualRocketDimensions({ \n    height: 100, \n    centerX: 50 \n  });\n\n  // 円の半径を基準にスケールを計算\n  // ロケットの全長が円の直径の約80%になるようにする\n  const attitudeDisplayScale = (circleRadius * 1.6) / totalHeight;\n\n  // 姿勢表示用のロケットパラメータ\n  const attitudeRocketParams = {\n    bodyWidth: rocketSim.bodyWidth * attitudeDisplayScale,\n    bodyHeight: rocketSim.bodyHeight * attitudeDisplayScale,\n    noseHeight: rocketSim.noseHeight * attitudeDisplayScale,\n    finHeight: rocketSim.finHeight * attitudeDisplayScale,\n    finBaseWidth: rocketSim.finBaseWidth * attitudeDisplayScale,\n    finTipWidth: rocketSim.finTipWidth * attitudeDisplayScale,\n    finThickness: rocketSim.finThickness * attitudeDisplayScale,\n    finSweepLength: rocketSim.finSweepLength * attitudeDisplayScale\n  };\n\n  // 重心位置の計算（スケールに合わせて）\n  const cogY = rocketSim.centerOfGravity * attitudeDisplayScale;\n\n  // 重心位置に基づいて回転中心を計算\n  // 重心位置はノーズ先端からの距離なので、本体高さから重心位置を引くことで底部からの距離を計算\n  const cogToBottom = attitudeRocketParams.bodyHeight + attitudeRocketParams.noseHeight - cogY;\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"mb-4\">\n        <h3 className=\"text-xl font-bold mb-2\">飛行シミュレーション</h3>\n        \n        <div className=\"grid grid-cols-2 gap-6 mb-4\">\n          <div>\n            <div className=\"mb-4\">\n              <label className=\"block mb-2\">発射角度 (度)</label>\n              <input\n                ref={rocketSim.launchAngleInputRef}\n                type=\"range\"\n                value={rocketSim.launchAngle}\n                min=\"-30\"\n                max=\"30\"\n                step=\"1\"\n                disabled={rocketSim.isLaunched}\n                {...rocketSim.handleLaunchAngle}\n                className=\"w-full cursor-pointer\"\n              />\n              <div className=\"flex justify-between\">\n                <span>-30°</span>\n                <span className=\"font-medium\">{rocketSim.launchAngle}°</span>\n                <span>30°</span>\n              </div>\n            </div>\n            \n            <div className=\"mb-4\">\n              <label className=\"block mb-2\">横風速度 (m/s)</label>\n              <input\n                ref={rocketSim.windSpeedInputRef}\n                type=\"range\"\n                value={rocketSim.windSpeed}\n                min=\"-8\"\n                max=\"8\"\n                step=\"0.1\"\n                disabled={rocketSim.isLaunched}\n                {...rocketSim.handleWindSpeed}\n                className=\"w-full cursor-pointer\"\n              />\n              <div className=\"flex justify-between\">\n                <span>-8 m/s</span>\n                <span className=\"font-medium\">{rocketSim.windSpeed.toFixed(1)} m/s</span>\n                <span>8 m/s</span>\n              </div>\n            </div>\n            \n            <div className=\"mt-4\">\n              <label className=\"block mb-2\">風速プロファイル</label>\n              <div className=\"flex items-center gap-4\">\n                <select\n                  value={rocketSim.windProfile}\n                  onChange={(e) => rocketSim.setWindProfile(e.target.value)}\n                  disabled={rocketSim.isLaunched}\n                  className=\"p-2 border border-gray-300 rounded w-48\"\n                >\n                  {Object.entries(WIND_PROFILES).map(([key, profile]) => (\n                    <option key={key} value={key}>\n                      {profile.name}\n                    </option>\n                  ))}\n                </select>\n                \n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"showWindArrows\"\n                    checked={rocketSim.showWindArrows}\n                    onChange={(e) => rocketSim.setShowWindArrows(e.target.checked)}\n                    className=\"mr-2\"\n                  />\n                  <label htmlFor=\"showWindArrows\">風速分布表示</label>\n                </div>\n              </div>\n              \n              <div className=\"mt-2 text-sm text-gray-600\">\n                <p>高度が上がるにつれて風速が強くなります。地形によって変化率が異なります。</p>\n                {rocketSim.windProfile !== 'uniform' && rocketSim.windSpeed !== 0 && (\n                  <p className=\"mt-1\">\n                    <span className=\"font-medium\">現在の設定:</span> 地上風速 {rocketSim.windSpeed.toFixed(1)} m/s、\n                    高度80mでは約 {rocketSim.calculateWindSpeedAtHeight(rocketSim.windSpeed, 80, rocketSim.windProfile).toFixed(1)} m/s\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n              \n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div className=\"space-y-2\">\n              <div>現在時刻: {rocketSim.currentTime.toFixed(2)} s</div>\n              <div>現在高度: {rocketSim.currentHeight.toFixed(1)} m</div>\n              <div>現在速度: {rocketSim.currentSpeed.toFixed(1)} m/s</div>\n              <div>現在水平距離: {rocketSim.currentDistance.toFixed(1)} m</div>\n              <div>フィンたわみ量: {rocketSim.formatFinDeflection(rocketSim.currentFinDeflection)}</div>\n              {position.effectiveWindSpeed && (\n                <div>現在実効風速: {position.effectiveWindSpeed.toFixed(1)} m/s</div>\n              )}\n            </div>\n            <div className=\"space-y-2\">\n              <div>最高到達高度: {rocketSim.currentMaxHeight.toFixed(1)} m</div>\n              <div>最高速度: {rocketSim.currentMaxSpeed.toFixed(1)} m/s</div>\n              <div>最大水平距離: {rocketSim.currentMaxDistance.toFixed(1)} m</div>\n              <div>最大フィンたわみ量: {rocketSim.currentMaxFinDeflection.toFixed(2)} mm</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-between mb-4\">\n          <div className=\"space-x-2\">\n            <button \n              onClick={rocketSim.handleLaunch}\n              disabled={rocketSim.isLaunched}\n              className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 disabled:opacity-50\"\n            >\n              発射\n            </button>\n            <button \n              onClick={rocketSim.handleReset}\n              className=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600\"\n            >\n              リセット\n            </button>\n            <button\n              onClick={() => setDebugView(!debugView)}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            >\n              {debugView ? \"通常表示\" : \"デバッグ表示\"}\n            </button>\n            {rocketSim.completedFlights.length > 0 && (\n              <span className=\"text-sm text-gray-600 ml-2 italic\">\n                {rocketSim.completedFlights.length}回の軌跡を表示中\n              </span>\n            )}\n          </div>\n        </div>\n        \n        {/* シミュレーション表示エリアを横並びに変更 */}\n        <div className=\"flex gap-4\">\n          {/* 左側: 飛行軌跡表示 */}\n          <div className=\"relative w-full bg-white rounded-lg border\">\n            <svg \n              width=\"100%\" \n              height={600} \n              viewBox={`0 0 800 600`}\n              style={{ background: 'white' }}\n            >\n              {/* グリッド線 - 常に表示するよう変更 */}\n              <>\n                {/* 横線 - 高度メモリ */}\n                {Array.from({ length: 10 }).map((_, i) => {\n                  const heightMeters = i * 10; // 10mごとに線を引く\n                  const y = rocketSim.metersToSvgY(heightMeters);\n                  \n                  if (y >= 0 && y <= 550) {\n                    return (\n                      <g key={`grid-h-${i}`}>\n                        <line \n                          x1={0} \n                          y1={y} \n                          x2={800} \n                          y2={y} \n                          stroke=\"#ddd\" \n                          strokeWidth=\"1\" \n                          strokeDasharray=\"5,5\" \n                        />\n                        <text x={5} y={y - 5} fontSize=\"12\" fill=\"#666\">\n                          {heightMeters}m\n                        </text>\n                      </g>\n                    );\n                  }\n                  return null;\n                })}\n                \n                {/* 縦線 - 水平距離メモリ */}\n                {Array.from({ length: 11 }).map((_, i) => {\n                  const distanceMeters = (i - 5) * 10; // -50mから+50mまで\n                  const x = rocketSim.metersToSvgX(distanceMeters);\n                  \n                  if (x >= 0 && x <= 800) {\n                    return (\n                      <g key={`grid-v-${i}`}>\n                        <line \n                          x1={x} \n                          y1={0} \n                          x2={x} \n                          y2={600} \n                          stroke=\"#ddd\" \n                          strokeWidth=\"1\" \n                          strokeDasharray=\"5,5\" \n                        />\n                        {distanceMeters !== 0 && (\n                          <text x={x + 5} y={550 + 15} fontSize=\"12\" fill=\"#666\">\n                            {distanceMeters}m\n                          </text>\n                        )}\n                      </g>\n                    );\n                  }\n                  return null;\n                })}\n              </>\n              \n              {/* 風速の視覚的表示 */}\n              {(debugView || rocketSim.windSpeed !== 0) && (\n                <g>\n                  <text \n                    x={20} \n                    y={30} \n                    fontSize=\"16\" \n                    fill={rocketSim.windSpeed === 0 ? \"#999\" : \"#333\"}\n                    fontWeight={Math.abs(rocketSim.windSpeed) > 2 ? \"bold\" : \"normal\"}\n                  >\n                    風速: {rocketSim.windSpeed.toFixed(1)} m/s\n                  </text>\n                \n                  {/* 風向き矢印 - テキストに合わせて配置 */}\n                  {rocketSim.windSpeed !== 0 && (\n                    <g>\n                      {/* 風速に合わせた矢印の取得 */}\n                      {(() => {\n                        const windArrow = rocketSim.getWindArrow(rocketSim.windSpeed);\n                        return (\n                          <>\n                            {/* 矢印の線 */}\n                            <path \n                              d={windArrow.line} \n                              stroke={windArrow.color}\n                              strokeWidth={windArrow.strokeWidth} \n                              fill=\"none\"\n                            />\n                            {/* 矢印の頭 */}\n                            <path \n                              d={windArrow.head}\n                              stroke={windArrow.color}\n                              strokeWidth={windArrow.strokeWidth} \n                              fill=\"none\"\n                            />\n                          </>\n                        );\n                      })()}\n                    </g>\n                  )}\n                </g>\n              )}\n              \n              {/* 風速分布の矢印表示 - 矢印の位置を修正、四角形を削除 */}\n              {rocketSim.showWindArrows && rocketSim.windSpeed !== 0 && (\n                <g>\n                  <text x={30} y={100} fontSize=\"12\" fill=\"#666\" fontWeight=\"bold\">\n                    高度別風速\n                  </text>\n                  \n                  {rocketSim.getWindProfileArrows(rocketSim.windSpeed, rocketSim.windProfile).map((arrow, index) => (\n                    <g key={`wind-arrow-${index}`}>\n                      <text x={30} y={arrow.y - 15} fontSize=\"10\" fill=\"#666\">\n                        {arrow.height}m\n                      </text>\n                      <path\n                        d={arrow.arrowPath.line}\n                        stroke={arrow.arrowPath.color}\n                        strokeWidth={arrow.arrowPath.strokeWidth}\n                        fill=\"none\"\n                      />\n                      <path\n                        d={arrow.arrowPath.head}\n                        stroke={arrow.arrowPath.color}\n                        strokeWidth={arrow.arrowPath.strokeWidth}\n                        fill=\"none\"\n                      />\n                      <text x={arrow.arrowPath.textX} y={arrow.arrowPath.textY + 4} fontSize=\"10\" fill=\"#666\">\n                        {arrow.windSpeed.toFixed(1)} m/s\n                      </text>\n                    </g>\n                  ))}\n                </g>\n              )}\n              \n              {/* 地面 */}\n              <rect \n                x={0} \n                y={550} \n                width={800} \n                height={50} \n                fill=\"#4b5563\" \n              />\n              \n              {/* 発射台 */}\n              <g transform={`rotate(${rocketSim.launchAngle} 400 550)`}>\n                <line \n                  x1={380} \n                  y1={550} \n                  x2={420} \n                  y2={550} \n                  stroke=\"#374151\" \n                  strokeWidth=\"4\" \n                />\n                <line \n                  x1={400} \n                  y1={550} \n                  x2={400} \n                  y2={550 - 0.65 * rocketSim.trajectoryScale} \n                  stroke=\"#374151\" \n                  strokeWidth=\"2\" \n                />\n              </g>\n              \n              {/* 過去のフライト軌跡 - データ間引きを減らして密度を上げる */}\n              {rocketSim.completedFlights.map((flight, index) => (\n                <path\n                  key={`completed-flight-${index}`}\n                  d={`M 400 550 ` + \n                    flight.data\n                      .filter((d, i) => i % 2 === 0) // データ間引きをさらに減らす\n                      .map(d => {\n                        const x = 400 + d.physicsX * flight.scale;\n                        const y = 550 - d.physicsY * flight.scale;\n                        return `L ${x} ${y}`;\n                      })\n                      .join(' ')}\n                  stroke=\"rgba(107, 114, 128, 0.5)\"\n                  strokeWidth=\"1.5\"\n                  fill=\"none\"\n                  strokeDasharray=\"2 2\"\n                />\n              ))}\n              \n              {/* 現在のフライト軌跡 - 色を鮮やかに、線を太く */}\n              {rocketSim.isLaunched && rocketSim.flightData.length > 0 && (\n                <path\n                  d={`M 400 550 ` + \n                    rocketSim.flightData\n                      .filter((d, i) => i <= Math.floor(rocketSim.currentTime / 0.02) && i % 2 === 0)\n                      .map(d => {\n                        // NaNチェックを追加\n                        const x = isNaN(d.physicsX) ? 400 : 400 + d.physicsX * rocketSim.trajectoryScale;\n                        const y = isNaN(d.physicsY) ? 550 : 550 - d.physicsY * rocketSim.trajectoryScale;\n                        return `L ${x} ${y}`;\n                      })\n                      .join(' ')}\n                  stroke=\"#2563eb\"\n                  strokeWidth=\"2.5\"\n                  fill=\"none\"\n                />\n              )}\n            </svg>\n          </div>\n          \n          {/* 右側: 新しい円形の姿勢表示窓 */}\n          <div className=\"w-1/4 bg-white rounded-lg border p-4 flex flex-col items-center\">\n            <h4 className=\"font-semibold mb-2\">ロケット姿勢表示</h4>\n            \n            {/* 円形の窓 */}\n            <div className=\"relative\">\n              <svg \n                width={200} \n                height={200} \n                viewBox=\"-100 -100 200 200\"\n                className=\"border-2 border-gray-300 rounded-full overflow-hidden bg-gray-50\"\n              >\n                {/* 背景の円 */}\n                <circle cx=\"0\" cy=\"0\" r=\"98\" fill=\"#f0f0f0\" />\n                \n                {/* 角度目盛り */}\n                {[...Array(12)].map((_, i) => {\n                  const angle = i * 30;\n                  const radians = (angle - 90) * Math.PI / 180;\n                  const x1 = Math.cos(radians) * 80;\n                  const y1 = Math.sin(radians) * 80;\n                  const x2 = Math.cos(radians) * 90;\n                  const y2 = Math.sin(radians) * 90;\n                  \n                  return (\n                    <g key={`mark-${i}`}>\n                      <line \n                        x1={x1} \n                        y1={y1} \n                        x2={x2} \n                        y2={y2} \n                        stroke=\"#999\" \n                        strokeWidth=\"1\" \n                      />\n                      {i % 3 === 0 && (\n                        <text \n                          x={Math.cos(radians) * 70} \n                          y={Math.sin(radians) * 70} \n                          textAnchor=\"middle\" \n                          dominantBaseline=\"middle\"\n                          fontSize=\"10\"\n                          fill=\"#666\"\n                        >\n                          {angle}°\n                        </text>\n                      )}\n                    </g>\n                  );\n                })}\n                \n                {/* 水平線と垂直線 */}\n                <line x1=\"-90\" y1=\"0\" x2=\"90\" y2=\"0\" stroke=\"#666\" strokeWidth=\"1\" strokeDasharray=\"3,2\" />\n                <line x1=\"0\" y1=\"-90\" x2=\"0\" y2=\"90\" stroke=\"#666\" strokeWidth=\"1\" strokeDasharray=\"3,2\" />\n                \n                {/* ロケット - 姿勢角度を表示（重心を中心に回転） */}\n                <g transform={`rotate(${isNaN(position.rotation) ? 0 : position.rotation})`}>\n                  {/* ロケット本体 - Y位置をずらして重心が原点に来るようにする */}\n                  <g>\n                    {/* ボディ */}\n                    <path \n                      d={getBodyPath(0, cogToBottom, attitudeRocketParams)} \n                      fill=\"#9CA3AF\" \n                      stroke=\"#374151\" \n                      strokeWidth=\"0.5\" \n                    />\n                    \n                    {/* フィン */}\n                    <path \n                      d={rocketSim.getCenterFinsPath(0, cogToBottom, attitudeRocketParams)} \n                      fill=\"#6B7280\" \n                      stroke=\"#374151\" \n                      strokeWidth=\"0.5\" \n                    />\n                    <path \n                      d={getLeftFinPath(0, cogToBottom, attitudeRocketParams)} \n                      fill=\"#6B7280\" \n                      stroke=\"#374151\" \n                      strokeWidth=\"0.5\" \n                    />\n                    <path \n                      d={getRightFinPath(0, cogToBottom, attitudeRocketParams)} \n                      fill=\"#6B7280\" \n                      stroke=\"#374151\" \n                      strokeWidth=\"0.5\" \n                    />\n                    \n                    {/* ノーズ */}\n                    <path \n                      d={getNosePath(0, cogToBottom, attitudeRocketParams)} \n                      fill=\"#D1D5DB\" \n                      stroke=\"#374151\" \n                      strokeWidth=\"0.5\" \n                    />\n                    \n                    {/* 重心位置のマーカー */}\n                    <circle cx=\"0\" cy=\"0\" r=\"2\" fill=\"red\" />\n                  </g>\n                </g>\n                \n                {/* 現在の角度表示 */}\n                <text \n                  x=\"0\" \n                  y=\"-85\" \n                  textAnchor=\"middle\" \n                  fontSize=\"12\" \n                  fill=\"#333\"\n                  fontWeight=\"bold\"\n                >\n                  {(position.rotation % 360).toFixed(1)}°\n                </text>\n              </svg>\n            </div>\n            \n            {/* 姿勢に関する追加情報 */}\n            <div className=\"mt-4 text-sm\">\n              <div className=\"grid grid-cols-2 gap-x-2 gap-y-1\">\n                <div className=\"font-semibold\">飛行フェーズ:</div>\n                <div>{rocketSim.getCurrentFlightPhase()}</div>\n                \n                <div className=\"font-semibold\">発射角度:</div>\n                <div>{rocketSim.launchAngle}°</div>\n                \n                <div className=\"font-semibold\">現在角度:</div>\n                <div>{(position.rotation % 360).toFixed(1)}°</div>\n                \n                <div className=\"font-semibold\">角度変化:</div>\n                <div>{(position.rotation - rocketSim.launchAngle).toFixed(1)}°</div>\n                \n                <div className=\"font-semibold\">風向き:</div>\n                <div>{rocketSim.windSpeed > 0 ? \"右\" : rocketSim.windSpeed < 0 ? \"左\" : \"なし\"}</div>\n              </div>\n            </div>\n            \n            {/* 前回の飛翔結果 */}\n            {rocketSim.lastFlightResults && (\n              <LastFlightResults results={rocketSim.lastFlightResults} />\n            )}\n          </div>\n          \n          {/* デバッグ表示 */}\n          {debugView && (\n            <WindAngleLimitVisualizer \n              position={position}\n              windSpeed={rocketSim.windSpeed}\n              currentFlightPhase={rocketSim.getCurrentFlightPhase()}\n            />\n          )}\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-sm mt-4 p-4 border border-gray-200\">\n          <h4 className=\"font-semibold mb-2\">使用パラメータ</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <ul className=\"list-disc pl-5\">\n              <li>重量: {rocketSim.weight} g</li>\n              <li>モーター: {rocketSim.selectedMotor}</li>\n              <li>パラシュート: {rocketSim.selectedParachute}</li>\n              <li>ノーズ形状: {NOSE_SHAPES[rocketSim.noseShape].name}</li>\n              <li>抗力係数: {NOSE_SHAPES[rocketSim.noseShape].cd.toFixed(2)}</li>\n            </ul>\n            <ul className=\"list-disc pl-5\">\n              <li>ロケット全長: {rocketSim.calculations.totalHeight} mm</li>\n              <li>ボディ直径: {rocketSim.bodyWidth} mm</li>\n              <li>フィン翼幅: {rocketSim.finHeight} mm</li>\n              <li>フィン厚み: {rocketSim.finThickness.toFixed(1)} mm</li>\n              <li>フィン材質: {FIN_MATERIALS[rocketSim.finMaterial].name}</li>\n              <li>重心位置: {rocketSim.centerOfGravity} mm</li>\n              <li>風速プロファイル: {WIND_PROFILES[rocketSim.windProfile].name}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      {/* 結果ポップアップ */}\n      {rocketSim.showResultsPopup && (\n        <ResultsPopup \n          results={rocketSim.flightResults} \n          onClose={rocketSim.handleCloseResultsPopup} \n        />\n      )}\n    </div>\n  );\n};\n\n// 統合されたロケットシミュレーターコンポーネント\nconst IntegratedRocketSimulator = () => {\n  const [activeTab, setActiveTab] = useState(UI_CONFIG.defaultTab);\n  const [debugView, setDebugView] = useState(false);\n\n  // ロケットシミュレーターフックを使用\n  const rocketSim = useRocketSimulator();\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">AVIENTER_2D</h2>\n      \n      <div className=\"flex border-b mb-6\">\n        <button \n          className={`px-6 py-3 font-medium ${activeTab === 'design' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg`}\n          onClick={() => setActiveTab('design')}\n        >\n          形状設計\n        </button>\n        <button \n          className={`px-6 py-3 font-medium ${activeTab === 'analysis' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg ml-1`}\n          onClick={() => setActiveTab('analysis')}\n        >\n          重量・空力特性\n        </button>\n        <button \n          className={`px-6 py-3 font-medium ${activeTab === 'simulation' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-t-lg ml-1`}\n          onClick={() => setActiveTab('simulation')}\n        >\n          飛行シミュレーション\n        </button>\n      </div>\n      \n      <div>\n        {activeTab === 'design' && <DesignTab rocketSim={rocketSim} />}\n        {activeTab === 'analysis' && <AnalysisTab rocketSim={rocketSim} getSafeValue={getSafeValue} />}\n        {activeTab === 'simulation' && <SimulationTab rocketSim={rocketSim} debugView={debugView} setDebugView={setDebugView} />}\n      </div>\n      \n      {/* 著作権・免責事項フッター */}\n      <div className=\"mt-8 pt-4 border-t border-gray-300 text-sm text-gray-600\">\n        <p className=\"mb-1\">© 2025 AVIATOL - ご利用は個人での範囲に限ります</p>\n        <p className=\"mb-1\">許可がない場合、商用でのご利用はご遠慮ください</p>\n        <p className=\"mb-1\">紹介目的でのご利用はこの限りではありません</p>\n        <p className=\"mb-1\">ご紹介いただける場合は、info(a)aviatol.comまでご連絡をお願いします（(a)は@に変えてください）</p>\n        <p className=\"mb-1\">本シミュレーションは実機での動作を保証するものではありません</p>\n        <p>ロケットの打上げは自身と周りの安全に十分配慮し、個人の責任の範囲で行なってください</p>\n      </div>\n    </div>\n  );\n};\n\nexport default IntegratedRocketSimulator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}